// (C) 1992-2018 Intel Corporation.                            
// Intel, the Intel logo, Intel, MegaCore, NIOS II, Quartus and TalkBack words    
// and logos are trademarks of Intel Corporation or its subsidiaries in the U.S.  
// and/or other countries. Other marks and brands may be claimed as the property  
// of others. See Trademarks on intel.com for full list of Intel trademarks or    
// the Trademarks & Brands Names Database (if Intel) or See www.Intel.com/legal (if Altera) 
// Your use of Intel Corporation's design tools, logic functions and other        
// software and tools, and its AMPP partner logic functions, and any output       
// files any of the foregoing (including device programming or simulation         
// files), and any associated documentation or information are expressly subject  
// to the terms and conditions of the Altera Program License Subscription         
// Agreement, Intel MegaCore Function License Agreement, or other applicable      
// license agreement, including, without limitation, that your use is for the     
// sole purpose of programming logic devices manufactured by Intel and sold by    
// Intel or its authorized distributors.  Please refer to the applicable          
// agreement for further details.                                                 

// Generated by Intel(R) FPGA SDK for OpenCL(TM), Version 18.1.0 Build 625 Standard Edition, Copyright (C) 2018 Intel Corporation

/////////////////////////////////////////////////////////////////
// MODULE gesturenet_system
/////////////////////////////////////////////////////////////////
module gesturenet_system
(
   input logic clock,
   input logic clock2x,
   input logic resetn,
   // AVS avs_avgpool2d_cra
   input logic avs_avgpool2d_cra_enable,
   input logic avs_avgpool2d_cra_read,
   input logic avs_avgpool2d_cra_write,
   input logic [3:0] avs_avgpool2d_cra_address,
   input logic [63:0] avs_avgpool2d_cra_writedata,
   input logic [7:0] avs_avgpool2d_cra_byteenable,
   output logic [63:0] avs_avgpool2d_cra_readdata,
   output logic avs_avgpool2d_cra_readdatavalid,
   // AVS avs_conv2d1x1_cra
   input logic avs_conv2d1x1_cra_enable,
   input logic avs_conv2d1x1_cra_read,
   input logic avs_conv2d1x1_cra_write,
   input logic [4:0] avs_conv2d1x1_cra_address,
   input logic [63:0] avs_conv2d1x1_cra_writedata,
   input logic [7:0] avs_conv2d1x1_cra_byteenable,
   output logic [63:0] avs_conv2d1x1_cra_readdata,
   output logic avs_conv2d1x1_cra_readdatavalid,
   // AVS avs_conv2d3x3_cra
   input logic avs_conv2d3x3_cra_enable,
   input logic avs_conv2d3x3_cra_read,
   input logic avs_conv2d3x3_cra_write,
   input logic [4:0] avs_conv2d3x3_cra_address,
   input logic [63:0] avs_conv2d3x3_cra_writedata,
   input logic [7:0] avs_conv2d3x3_cra_byteenable,
   output logic [63:0] avs_conv2d3x3_cra_readdata,
   output logic avs_conv2d3x3_cra_readdatavalid,
   // AVS avs_fc_cra
   input logic avs_fc_cra_enable,
   input logic avs_fc_cra_read,
   input logic avs_fc_cra_write,
   input logic [4:0] avs_fc_cra_address,
   input logic [63:0] avs_fc_cra_writedata,
   input logic [7:0] avs_fc_cra_byteenable,
   output logic [63:0] avs_fc_cra_readdata,
   output logic avs_fc_cra_readdatavalid,
   // AVS avs_maxpool2d_cra
   input logic avs_maxpool2d_cra_enable,
   input logic avs_maxpool2d_cra_read,
   input logic avs_maxpool2d_cra_write,
   input logic [3:0] avs_maxpool2d_cra_address,
   input logic [63:0] avs_maxpool2d_cra_writedata,
   input logic [7:0] avs_maxpool2d_cra_byteenable,
   output logic [63:0] avs_maxpool2d_cra_readdata,
   output logic avs_maxpool2d_cra_readdatavalid,
   output logic kernel_irq,
   // AVM avm_memgmem0_port_0_0_rw
   output logic avm_memgmem0_port_0_0_rw_enable,
   output logic avm_memgmem0_port_0_0_rw_read,
   output logic avm_memgmem0_port_0_0_rw_write,
   output logic [4:0] avm_memgmem0_port_0_0_rw_burstcount,
   output logic [29:0] avm_memgmem0_port_0_0_rw_address,
   output logic [255:0] avm_memgmem0_port_0_0_rw_writedata,
   output logic [31:0] avm_memgmem0_port_0_0_rw_byteenable,
   input logic avm_memgmem0_port_0_0_rw_waitrequest,
   input logic [255:0] avm_memgmem0_port_0_0_rw_readdata,
   input logic avm_memgmem0_port_0_0_rw_readdatavalid,
   input logic avm_memgmem0_port_0_0_rw_writeack,
   // AVM avm_memgmem0_port_1_0_rw
   output logic avm_memgmem0_port_1_0_rw_enable,
   output logic avm_memgmem0_port_1_0_rw_read,
   output logic avm_memgmem0_port_1_0_rw_write,
   output logic [4:0] avm_memgmem0_port_1_0_rw_burstcount,
   output logic [29:0] avm_memgmem0_port_1_0_rw_address,
   output logic [255:0] avm_memgmem0_port_1_0_rw_writedata,
   output logic [31:0] avm_memgmem0_port_1_0_rw_byteenable,
   input logic avm_memgmem0_port_1_0_rw_waitrequest,
   input logic [255:0] avm_memgmem0_port_1_0_rw_readdata,
   input logic avm_memgmem0_port_1_0_rw_readdatavalid,
   input logic avm_memgmem0_port_1_0_rw_writeack
);
   logic [4:0] kernel_irqs;
   logic avm_kernel_rd_enable [13];
   logic avm_kernel_rd_read [13];
   logic avm_kernel_rd_write [13];
   logic [4:0] avm_kernel_rd_burstcount [13];
   logic [30:0] avm_kernel_rd_address [13];
   logic [255:0] avm_kernel_rd_writedata [13];
   logic [31:0] avm_kernel_rd_byteenable [13];
   logic avm_kernel_rd_waitrequest [13];
   logic [255:0] avm_kernel_rd_readdata [13];
   logic avm_kernel_rd_readdatavalid [13];
   logic avm_kernel_rd_writeack [13];
   logic avm_kernel_wr_enable [5];
   logic avm_kernel_wr_read [5];
   logic avm_kernel_wr_write [5];
   logic [4:0] avm_kernel_wr_burstcount [5];
   logic [30:0] avm_kernel_wr_address [5];
   logic [255:0] avm_kernel_wr_writedata [5];
   logic [31:0] avm_kernel_wr_byteenable [5];
   logic avm_kernel_wr_waitrequest [5];
   logic [255:0] avm_kernel_wr_readdata [5];
   logic avm_kernel_wr_readdatavalid [5];
   logic avm_kernel_wr_writeack [5];
   logic ic_avm_enable [2];
   logic ic_avm_read [2];
   logic ic_avm_write [2];
   logic [4:0] ic_avm_burstcount [2];
   logic [29:0] ic_avm_address [2];
   logic [255:0] ic_avm_writedata [2];
   logic [31:0] ic_avm_byteenable [2];
   logic ic_avm_waitrequest [2];
   logic [255:0] ic_avm_readdata [2];
   logic ic_avm_readdatavalid [2];
   logic ic_avm_writeack [2];

   // INST avgpool2d_std_ic_inst of avgpool2d_std_ic_partition_wrapper
   avgpool2d_std_ic_partition_wrapper avgpool2d_std_ic_inst
   (
      .clock(clock),
      .clock2x(clock2x),
      .resetn(resetn),
      .cra_irq_avgpool2d(kernel_irqs[0]),
      // AVS avs_avgpool2d_cra
      .avs_avgpool2d_cra_enable(avs_avgpool2d_cra_enable),
      .avs_avgpool2d_cra_read(avs_avgpool2d_cra_read),
      .avs_avgpool2d_cra_write(avs_avgpool2d_cra_write),
      .avs_avgpool2d_cra_address(avs_avgpool2d_cra_address),
      .avs_avgpool2d_cra_writedata(avs_avgpool2d_cra_writedata),
      .avs_avgpool2d_cra_byteenable(avs_avgpool2d_cra_byteenable),
      .avs_avgpool2d_cra_readdata(avs_avgpool2d_cra_readdata),
      .avs_avgpool2d_cra_readdatavalid(avs_avgpool2d_cra_readdatavalid),
      // AVM avgpool2d_0_avm_unnamed_avgpool2d0
      .avgpool2d_0_avm_unnamed_avgpool2d0_enable(avm_kernel_rd_enable[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d0_read(avm_kernel_rd_read[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d0_write(avm_kernel_rd_write[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d0_burstcount(avm_kernel_rd_burstcount[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d0_address(avm_kernel_rd_address[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d0_writedata(avm_kernel_rd_writedata[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d0_byteenable(avm_kernel_rd_byteenable[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d0_waitrequest(avm_kernel_rd_waitrequest[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d0_readdata(avm_kernel_rd_readdata[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d0_readdatavalid(avm_kernel_rd_readdatavalid[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d0_writeack(avm_kernel_rd_writeack[0]),
      // AVM avgpool2d_0_avm_unnamed_avgpool2d1
      .avgpool2d_0_avm_unnamed_avgpool2d1_enable(avm_kernel_wr_enable[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_read(avm_kernel_wr_read[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_write(avm_kernel_wr_write[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_burstcount(avm_kernel_wr_burstcount[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_address(avm_kernel_wr_address[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_writedata(avm_kernel_wr_writedata[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_byteenable(avm_kernel_wr_byteenable[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_waitrequest(avm_kernel_wr_waitrequest[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_readdata(avm_kernel_wr_readdata[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_readdatavalid(avm_kernel_wr_readdatavalid[0]),
      .avgpool2d_0_avm_unnamed_avgpool2d1_writeack(avm_kernel_wr_writeack[0])
   );

   // INST conv2d1x1_std_ic_inst of conv2d1x1_std_ic_partition_wrapper
   conv2d1x1_std_ic_partition_wrapper conv2d1x1_std_ic_inst
   (
      .clock(clock),
      .clock2x(clock2x),
      .resetn(resetn),
      .cra_irq_conv2d1x1(kernel_irqs[1]),
      // AVS avs_conv2d1x1_cra
      .avs_conv2d1x1_cra_enable(avs_conv2d1x1_cra_enable),
      .avs_conv2d1x1_cra_read(avs_conv2d1x1_cra_read),
      .avs_conv2d1x1_cra_write(avs_conv2d1x1_cra_write),
      .avs_conv2d1x1_cra_address(avs_conv2d1x1_cra_address),
      .avs_conv2d1x1_cra_writedata(avs_conv2d1x1_cra_writedata),
      .avs_conv2d1x1_cra_byteenable(avs_conv2d1x1_cra_byteenable),
      .avs_conv2d1x1_cra_readdata(avs_conv2d1x1_cra_readdata),
      .avs_conv2d1x1_cra_readdatavalid(avs_conv2d1x1_cra_readdatavalid),
      // AVM conv2d1x1_0_avm_memcoalesce_filter_weight_load_0
      .conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_enable(avm_kernel_rd_enable[1]),
      .conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_read(avm_kernel_rd_read[1]),
      .conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_write(avm_kernel_rd_write[1]),
      .conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_burstcount(avm_kernel_rd_burstcount[1]),
      .conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_address(avm_kernel_rd_address[1]),
      .conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_writedata(avm_kernel_rd_writedata[1]),
      .conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_byteenable(avm_kernel_rd_byteenable[1]),
      .conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_waitrequest(avm_kernel_rd_waitrequest[1]),
      .conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_readdata(avm_kernel_rd_readdata[1]),
      .conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_readdatavalid(avm_kernel_rd_readdatavalid[1]),
      .conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_writeack(avm_kernel_rd_writeack[1]),
      // AVM conv2d1x1_0_avm_unnamed_conv2d1x10
      .conv2d1x1_0_avm_unnamed_conv2d1x10_enable(avm_kernel_rd_enable[2]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_read(avm_kernel_rd_read[2]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_write(avm_kernel_rd_write[2]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_burstcount(avm_kernel_rd_burstcount[2]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_address(avm_kernel_rd_address[2]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_writedata(avm_kernel_rd_writedata[2]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_byteenable(avm_kernel_rd_byteenable[2]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_waitrequest(avm_kernel_rd_waitrequest[2]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_readdata(avm_kernel_rd_readdata[2]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_readdatavalid(avm_kernel_rd_readdatavalid[2]),
      .conv2d1x1_0_avm_unnamed_conv2d1x10_writeack(avm_kernel_rd_writeack[2]),
      // AVM conv2d1x1_0_avm_unnamed_conv2d1x13
      .conv2d1x1_0_avm_unnamed_conv2d1x13_enable(avm_kernel_rd_enable[3]),
      .conv2d1x1_0_avm_unnamed_conv2d1x13_read(avm_kernel_rd_read[3]),
      .conv2d1x1_0_avm_unnamed_conv2d1x13_write(avm_kernel_rd_write[3]),
      .conv2d1x1_0_avm_unnamed_conv2d1x13_burstcount(avm_kernel_rd_burstcount[3]),
      .conv2d1x1_0_avm_unnamed_conv2d1x13_address(avm_kernel_rd_address[3]),
      .conv2d1x1_0_avm_unnamed_conv2d1x13_writedata(avm_kernel_rd_writedata[3]),
      .conv2d1x1_0_avm_unnamed_conv2d1x13_byteenable(avm_kernel_rd_byteenable[3]),
      .conv2d1x1_0_avm_unnamed_conv2d1x13_waitrequest(avm_kernel_rd_waitrequest[3]),
      .conv2d1x1_0_avm_unnamed_conv2d1x13_readdata(avm_kernel_rd_readdata[3]),
      .conv2d1x1_0_avm_unnamed_conv2d1x13_readdatavalid(avm_kernel_rd_readdatavalid[3]),
      .conv2d1x1_0_avm_unnamed_conv2d1x13_writeack(avm_kernel_rd_writeack[3]),
      // AVM conv2d1x1_0_avm_unnamed_conv2d1x14
      .conv2d1x1_0_avm_unnamed_conv2d1x14_enable(avm_kernel_rd_enable[4]),
      .conv2d1x1_0_avm_unnamed_conv2d1x14_read(avm_kernel_rd_read[4]),
      .conv2d1x1_0_avm_unnamed_conv2d1x14_write(avm_kernel_rd_write[4]),
      .conv2d1x1_0_avm_unnamed_conv2d1x14_burstcount(avm_kernel_rd_burstcount[4]),
      .conv2d1x1_0_avm_unnamed_conv2d1x14_address(avm_kernel_rd_address[4]),
      .conv2d1x1_0_avm_unnamed_conv2d1x14_writedata(avm_kernel_rd_writedata[4]),
      .conv2d1x1_0_avm_unnamed_conv2d1x14_byteenable(avm_kernel_rd_byteenable[4]),
      .conv2d1x1_0_avm_unnamed_conv2d1x14_waitrequest(avm_kernel_rd_waitrequest[4]),
      .conv2d1x1_0_avm_unnamed_conv2d1x14_readdata(avm_kernel_rd_readdata[4]),
      .conv2d1x1_0_avm_unnamed_conv2d1x14_readdatavalid(avm_kernel_rd_readdatavalid[4]),
      .conv2d1x1_0_avm_unnamed_conv2d1x14_writeack(avm_kernel_rd_writeack[4]),
      // AVM conv2d1x1_0_avm_unnamed_conv2d1x15
      .conv2d1x1_0_avm_unnamed_conv2d1x15_enable(avm_kernel_rd_enable[5]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_read(avm_kernel_rd_read[5]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_write(avm_kernel_rd_write[5]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_burstcount(avm_kernel_rd_burstcount[5]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_address(avm_kernel_rd_address[5]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_writedata(avm_kernel_rd_writedata[5]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_byteenable(avm_kernel_rd_byteenable[5]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_waitrequest(avm_kernel_rd_waitrequest[5]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_readdata(avm_kernel_rd_readdata[5]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_readdatavalid(avm_kernel_rd_readdatavalid[5]),
      .conv2d1x1_0_avm_unnamed_conv2d1x15_writeack(avm_kernel_rd_writeack[5]),
      // AVM conv2d1x1_0_avm_unnamed_conv2d1x17
      .conv2d1x1_0_avm_unnamed_conv2d1x17_enable(avm_kernel_wr_enable[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x17_read(avm_kernel_wr_read[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x17_write(avm_kernel_wr_write[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x17_burstcount(avm_kernel_wr_burstcount[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x17_address(avm_kernel_wr_address[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x17_writedata(avm_kernel_wr_writedata[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x17_byteenable(avm_kernel_wr_byteenable[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x17_waitrequest(avm_kernel_wr_waitrequest[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x17_readdata(avm_kernel_wr_readdata[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x17_readdatavalid(avm_kernel_wr_readdatavalid[1]),
      .conv2d1x1_0_avm_unnamed_conv2d1x17_writeack(avm_kernel_wr_writeack[1])
   );

   // INST conv2d3x3_std_ic_inst of conv2d3x3_std_ic_partition_wrapper
   conv2d3x3_std_ic_partition_wrapper conv2d3x3_std_ic_inst
   (
      .clock(clock),
      .clock2x(clock2x),
      .resetn(resetn),
      .cra_irq_conv2d3x3(kernel_irqs[2]),
      // AVS avs_conv2d3x3_cra
      .avs_conv2d3x3_cra_enable(avs_conv2d3x3_cra_enable),
      .avs_conv2d3x3_cra_read(avs_conv2d3x3_cra_read),
      .avs_conv2d3x3_cra_write(avs_conv2d3x3_cra_write),
      .avs_conv2d3x3_cra_address(avs_conv2d3x3_cra_address),
      .avs_conv2d3x3_cra_writedata(avs_conv2d3x3_cra_writedata),
      .avs_conv2d3x3_cra_byteenable(avs_conv2d3x3_cra_byteenable),
      .avs_conv2d3x3_cra_readdata(avs_conv2d3x3_cra_readdata),
      .avs_conv2d3x3_cra_readdatavalid(avs_conv2d3x3_cra_readdatavalid),
      // AVM conv2d3x3_0_avm_memcoalesce_filter_weight_load_0
      .conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_enable(avm_kernel_rd_enable[6]),
      .conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_read(avm_kernel_rd_read[6]),
      .conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_write(avm_kernel_rd_write[6]),
      .conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_burstcount(avm_kernel_rd_burstcount[6]),
      .conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_address(avm_kernel_rd_address[6]),
      .conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_writedata(avm_kernel_rd_writedata[6]),
      .conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_byteenable(avm_kernel_rd_byteenable[6]),
      .conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_waitrequest(avm_kernel_rd_waitrequest[6]),
      .conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_readdata(avm_kernel_rd_readdata[6]),
      .conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_readdatavalid(avm_kernel_rd_readdatavalid[6]),
      .conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_writeack(avm_kernel_rd_writeack[6]),
      // AVM conv2d3x3_0_avm_memcoalesce_input_im_load_0
      .conv2d3x3_0_avm_memcoalesce_input_im_load_0_enable(avm_kernel_rd_enable[7]),
      .conv2d3x3_0_avm_memcoalesce_input_im_load_0_read(avm_kernel_rd_read[7]),
      .conv2d3x3_0_avm_memcoalesce_input_im_load_0_write(avm_kernel_rd_write[7]),
      .conv2d3x3_0_avm_memcoalesce_input_im_load_0_burstcount(avm_kernel_rd_burstcount[7]),
      .conv2d3x3_0_avm_memcoalesce_input_im_load_0_address(avm_kernel_rd_address[7]),
      .conv2d3x3_0_avm_memcoalesce_input_im_load_0_writedata(avm_kernel_rd_writedata[7]),
      .conv2d3x3_0_avm_memcoalesce_input_im_load_0_byteenable(avm_kernel_rd_byteenable[7]),
      .conv2d3x3_0_avm_memcoalesce_input_im_load_0_waitrequest(avm_kernel_rd_waitrequest[7]),
      .conv2d3x3_0_avm_memcoalesce_input_im_load_0_readdata(avm_kernel_rd_readdata[7]),
      .conv2d3x3_0_avm_memcoalesce_input_im_load_0_readdatavalid(avm_kernel_rd_readdatavalid[7]),
      .conv2d3x3_0_avm_memcoalesce_input_im_load_0_writeack(avm_kernel_rd_writeack[7]),
      // AVM conv2d3x3_0_avm_unnamed_conv2d3x30
      .conv2d3x3_0_avm_unnamed_conv2d3x30_enable(avm_kernel_rd_enable[8]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_read(avm_kernel_rd_read[8]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_write(avm_kernel_rd_write[8]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_burstcount(avm_kernel_rd_burstcount[8]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_address(avm_kernel_rd_address[8]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_writedata(avm_kernel_rd_writedata[8]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_byteenable(avm_kernel_rd_byteenable[8]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_waitrequest(avm_kernel_rd_waitrequest[8]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_readdata(avm_kernel_rd_readdata[8]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_readdatavalid(avm_kernel_rd_readdatavalid[8]),
      .conv2d3x3_0_avm_unnamed_conv2d3x30_writeack(avm_kernel_rd_writeack[8]),
      // AVM conv2d3x3_0_avm_unnamed_conv2d3x35
      .conv2d3x3_0_avm_unnamed_conv2d3x35_enable(avm_kernel_wr_enable[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x35_read(avm_kernel_wr_read[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x35_write(avm_kernel_wr_write[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x35_burstcount(avm_kernel_wr_burstcount[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x35_address(avm_kernel_wr_address[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x35_writedata(avm_kernel_wr_writedata[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x35_byteenable(avm_kernel_wr_byteenable[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x35_waitrequest(avm_kernel_wr_waitrequest[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x35_readdata(avm_kernel_wr_readdata[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x35_readdatavalid(avm_kernel_wr_readdatavalid[2]),
      .conv2d3x3_0_avm_unnamed_conv2d3x35_writeack(avm_kernel_wr_writeack[2])
   );

   // INST fc_std_ic_inst of fc_std_ic_partition_wrapper
   fc_std_ic_partition_wrapper fc_std_ic_inst
   (
      .clock(clock),
      .clock2x(clock2x),
      .resetn(resetn),
      .cra_irq_fc(kernel_irqs[3]),
      // AVS avs_fc_cra
      .avs_fc_cra_enable(avs_fc_cra_enable),
      .avs_fc_cra_read(avs_fc_cra_read),
      .avs_fc_cra_write(avs_fc_cra_write),
      .avs_fc_cra_address(avs_fc_cra_address),
      .avs_fc_cra_writedata(avs_fc_cra_writedata),
      .avs_fc_cra_byteenable(avs_fc_cra_byteenable),
      .avs_fc_cra_readdata(avs_fc_cra_readdata),
      .avs_fc_cra_readdatavalid(avs_fc_cra_readdatavalid),
      // AVM fc_0_avm_unnamed_fc0
      .fc_0_avm_unnamed_fc0_enable(avm_kernel_rd_enable[9]),
      .fc_0_avm_unnamed_fc0_read(avm_kernel_rd_read[9]),
      .fc_0_avm_unnamed_fc0_write(avm_kernel_rd_write[9]),
      .fc_0_avm_unnamed_fc0_burstcount(avm_kernel_rd_burstcount[9]),
      .fc_0_avm_unnamed_fc0_address(avm_kernel_rd_address[9]),
      .fc_0_avm_unnamed_fc0_writedata(avm_kernel_rd_writedata[9]),
      .fc_0_avm_unnamed_fc0_byteenable(avm_kernel_rd_byteenable[9]),
      .fc_0_avm_unnamed_fc0_waitrequest(avm_kernel_rd_waitrequest[9]),
      .fc_0_avm_unnamed_fc0_readdata(avm_kernel_rd_readdata[9]),
      .fc_0_avm_unnamed_fc0_readdatavalid(avm_kernel_rd_readdatavalid[9]),
      .fc_0_avm_unnamed_fc0_writeack(avm_kernel_rd_writeack[9]),
      // AVM fc_0_avm_unnamed_fc2
      .fc_0_avm_unnamed_fc2_enable(avm_kernel_rd_enable[10]),
      .fc_0_avm_unnamed_fc2_read(avm_kernel_rd_read[10]),
      .fc_0_avm_unnamed_fc2_write(avm_kernel_rd_write[10]),
      .fc_0_avm_unnamed_fc2_burstcount(avm_kernel_rd_burstcount[10]),
      .fc_0_avm_unnamed_fc2_address(avm_kernel_rd_address[10]),
      .fc_0_avm_unnamed_fc2_writedata(avm_kernel_rd_writedata[10]),
      .fc_0_avm_unnamed_fc2_byteenable(avm_kernel_rd_byteenable[10]),
      .fc_0_avm_unnamed_fc2_waitrequest(avm_kernel_rd_waitrequest[10]),
      .fc_0_avm_unnamed_fc2_readdata(avm_kernel_rd_readdata[10]),
      .fc_0_avm_unnamed_fc2_readdatavalid(avm_kernel_rd_readdatavalid[10]),
      .fc_0_avm_unnamed_fc2_writeack(avm_kernel_rd_writeack[10]),
      // AVM fc_0_avm_unnamed_fc3
      .fc_0_avm_unnamed_fc3_enable(avm_kernel_rd_enable[11]),
      .fc_0_avm_unnamed_fc3_read(avm_kernel_rd_read[11]),
      .fc_0_avm_unnamed_fc3_write(avm_kernel_rd_write[11]),
      .fc_0_avm_unnamed_fc3_burstcount(avm_kernel_rd_burstcount[11]),
      .fc_0_avm_unnamed_fc3_address(avm_kernel_rd_address[11]),
      .fc_0_avm_unnamed_fc3_writedata(avm_kernel_rd_writedata[11]),
      .fc_0_avm_unnamed_fc3_byteenable(avm_kernel_rd_byteenable[11]),
      .fc_0_avm_unnamed_fc3_waitrequest(avm_kernel_rd_waitrequest[11]),
      .fc_0_avm_unnamed_fc3_readdata(avm_kernel_rd_readdata[11]),
      .fc_0_avm_unnamed_fc3_readdatavalid(avm_kernel_rd_readdatavalid[11]),
      .fc_0_avm_unnamed_fc3_writeack(avm_kernel_rd_writeack[11]),
      // AVM fc_0_avm_unnamed_fc5
      .fc_0_avm_unnamed_fc5_enable(avm_kernel_wr_enable[3]),
      .fc_0_avm_unnamed_fc5_read(avm_kernel_wr_read[3]),
      .fc_0_avm_unnamed_fc5_write(avm_kernel_wr_write[3]),
      .fc_0_avm_unnamed_fc5_burstcount(avm_kernel_wr_burstcount[3]),
      .fc_0_avm_unnamed_fc5_address(avm_kernel_wr_address[3]),
      .fc_0_avm_unnamed_fc5_writedata(avm_kernel_wr_writedata[3]),
      .fc_0_avm_unnamed_fc5_byteenable(avm_kernel_wr_byteenable[3]),
      .fc_0_avm_unnamed_fc5_waitrequest(avm_kernel_wr_waitrequest[3]),
      .fc_0_avm_unnamed_fc5_readdata(avm_kernel_wr_readdata[3]),
      .fc_0_avm_unnamed_fc5_readdatavalid(avm_kernel_wr_readdatavalid[3]),
      .fc_0_avm_unnamed_fc5_writeack(avm_kernel_wr_writeack[3])
   );

   // INST maxpool2d_std_ic_inst of maxpool2d_std_ic_partition_wrapper
   maxpool2d_std_ic_partition_wrapper maxpool2d_std_ic_inst
   (
      .clock(clock),
      .clock2x(clock2x),
      .resetn(resetn),
      .cra_irq_maxpool2d(kernel_irqs[4]),
      // AVS avs_maxpool2d_cra
      .avs_maxpool2d_cra_enable(avs_maxpool2d_cra_enable),
      .avs_maxpool2d_cra_read(avs_maxpool2d_cra_read),
      .avs_maxpool2d_cra_write(avs_maxpool2d_cra_write),
      .avs_maxpool2d_cra_address(avs_maxpool2d_cra_address),
      .avs_maxpool2d_cra_writedata(avs_maxpool2d_cra_writedata),
      .avs_maxpool2d_cra_byteenable(avs_maxpool2d_cra_byteenable),
      .avs_maxpool2d_cra_readdata(avs_maxpool2d_cra_readdata),
      .avs_maxpool2d_cra_readdatavalid(avs_maxpool2d_cra_readdatavalid),
      // AVM maxpool2d_0_avm_memcoalesce_input_im_load_0
      .maxpool2d_0_avm_memcoalesce_input_im_load_0_enable(avm_kernel_rd_enable[12]),
      .maxpool2d_0_avm_memcoalesce_input_im_load_0_read(avm_kernel_rd_read[12]),
      .maxpool2d_0_avm_memcoalesce_input_im_load_0_write(avm_kernel_rd_write[12]),
      .maxpool2d_0_avm_memcoalesce_input_im_load_0_burstcount(avm_kernel_rd_burstcount[12]),
      .maxpool2d_0_avm_memcoalesce_input_im_load_0_address(avm_kernel_rd_address[12]),
      .maxpool2d_0_avm_memcoalesce_input_im_load_0_writedata(avm_kernel_rd_writedata[12]),
      .maxpool2d_0_avm_memcoalesce_input_im_load_0_byteenable(avm_kernel_rd_byteenable[12]),
      .maxpool2d_0_avm_memcoalesce_input_im_load_0_waitrequest(avm_kernel_rd_waitrequest[12]),
      .maxpool2d_0_avm_memcoalesce_input_im_load_0_readdata(avm_kernel_rd_readdata[12]),
      .maxpool2d_0_avm_memcoalesce_input_im_load_0_readdatavalid(avm_kernel_rd_readdatavalid[12]),
      .maxpool2d_0_avm_memcoalesce_input_im_load_0_writeack(avm_kernel_rd_writeack[12]),
      // AVM maxpool2d_0_avm_unnamed_maxpool2d1
      .maxpool2d_0_avm_unnamed_maxpool2d1_enable(avm_kernel_wr_enable[4]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_read(avm_kernel_wr_read[4]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_write(avm_kernel_wr_write[4]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_burstcount(avm_kernel_wr_burstcount[4]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_address(avm_kernel_wr_address[4]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_writedata(avm_kernel_wr_writedata[4]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_byteenable(avm_kernel_wr_byteenable[4]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_waitrequest(avm_kernel_wr_waitrequest[4]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_readdata(avm_kernel_wr_readdata[4]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_readdatavalid(avm_kernel_wr_readdatavalid[4]),
      .maxpool2d_0_avm_unnamed_maxpool2d1_writeack(avm_kernel_wr_writeack[4])
   );

   assign kernel_irq = |kernel_irqs;
   // INST lsu_ic_top of lsu_ic_top
   lsu_ic_top
   #(
      .AWIDTH(31),
      .SHIFT(30),
      .MWIDTH_BYTES(32),
      .BURST_CNT_W(5),
      .NUM_RD_PORT(13),
      .NUM_WR_PORT(5),
      .NUM_DIMM(2),
      .ENABLE_DUAL_RING(0),
      .ENABLE_MULTIPLE_WR_RING(0),
      .ENABLE_LAST_WAIT(0),
      .ENABLE_REORDER(0),
      .NUM_REORDER(1),
      .HIGH_FMAX(0)
   )
   lsu_ic_top
   (
      .clk(clock),
      .resetn(resetn),
      .i_rd_request(avm_kernel_rd_read),
      .i_rd_address(avm_kernel_rd_address),
      .i_rd_burstcount(avm_kernel_rd_burstcount),
      .i_wr_byteenable(avm_kernel_wr_byteenable),
      .i_wr_address(avm_kernel_wr_address),
      .i_wr_request(avm_kernel_wr_write),
      .i_wr_burstcount(avm_kernel_wr_burstcount),
      .i_wr_writedata(avm_kernel_wr_writedata),
      .i_avm_waitrequest(ic_avm_waitrequest),
      .i_avm_readdata(ic_avm_readdata),
      .i_avm_readdatavalid(ic_avm_readdatavalid),
      .o_avm_byteenable(ic_avm_byteenable),
      .o_avm_address(ic_avm_address),
      .o_avm_read(ic_avm_read),
      .o_avm_write(ic_avm_write),
      .o_avm_burstcount(ic_avm_burstcount),
      .o_wr_waitrequest(avm_kernel_wr_waitrequest),
      .o_avm_writedata(ic_avm_writedata),
      .o_avm_writeack(avm_kernel_wr_writeack),
      .o_rd_waitrequest(avm_kernel_rd_waitrequest),
      .o_avm_readdata(avm_kernel_rd_readdata),
      .o_avm_readdatavalid(avm_kernel_rd_readdatavalid)
   );

   assign avm_memgmem0_port_0_0_rw_read = ic_avm_read[0];
   assign avm_memgmem0_port_0_0_rw_write = ic_avm_write[0];
   assign avm_memgmem0_port_0_0_rw_burstcount = ic_avm_burstcount[0];
   assign avm_memgmem0_port_0_0_rw_address = ic_avm_address[0];
   assign avm_memgmem0_port_0_0_rw_writedata = ic_avm_writedata[0];
   assign avm_memgmem0_port_0_0_rw_byteenable = ic_avm_byteenable[0];
   assign ic_avm_waitrequest[0] = avm_memgmem0_port_0_0_rw_waitrequest;
   assign ic_avm_readdata[0] = avm_memgmem0_port_0_0_rw_readdata;
   assign ic_avm_readdatavalid[0] = avm_memgmem0_port_0_0_rw_readdatavalid;
   assign avm_memgmem0_port_1_0_rw_read = ic_avm_read[1];
   assign avm_memgmem0_port_1_0_rw_write = ic_avm_write[1];
   assign avm_memgmem0_port_1_0_rw_burstcount = ic_avm_burstcount[1];
   assign avm_memgmem0_port_1_0_rw_address = ic_avm_address[1];
   assign avm_memgmem0_port_1_0_rw_writedata = ic_avm_writedata[1];
   assign avm_memgmem0_port_1_0_rw_byteenable = ic_avm_byteenable[1];
   assign ic_avm_waitrequest[1] = avm_memgmem0_port_1_0_rw_waitrequest;
   assign ic_avm_readdata[1] = avm_memgmem0_port_1_0_rw_readdata;
   assign ic_avm_readdatavalid[1] = avm_memgmem0_port_1_0_rw_readdatavalid;
endmodule

/////////////////////////////////////////////////////////////////
// MODULE avgpool2d_std_ic_partition_wrapper
/////////////////////////////////////////////////////////////////
module avgpool2d_std_ic_partition_wrapper
(
   input logic clock,
   input logic clock2x,
   input logic resetn,
   output logic cra_irq_avgpool2d,
   // AVS avs_avgpool2d_cra
   input logic avs_avgpool2d_cra_enable,
   input logic avs_avgpool2d_cra_read,
   input logic avs_avgpool2d_cra_write,
   input logic [3:0] avs_avgpool2d_cra_address,
   input logic [63:0] avs_avgpool2d_cra_writedata,
   input logic [7:0] avs_avgpool2d_cra_byteenable,
   output logic [63:0] avs_avgpool2d_cra_readdata,
   output logic avs_avgpool2d_cra_readdatavalid,
   // AVM avgpool2d_0_avm_unnamed_avgpool2d0
   output logic avgpool2d_0_avm_unnamed_avgpool2d0_enable,
   output logic avgpool2d_0_avm_unnamed_avgpool2d0_read,
   output logic avgpool2d_0_avm_unnamed_avgpool2d0_write,
   output logic [4:0] avgpool2d_0_avm_unnamed_avgpool2d0_burstcount,
   output logic [30:0] avgpool2d_0_avm_unnamed_avgpool2d0_address,
   output logic [255:0] avgpool2d_0_avm_unnamed_avgpool2d0_writedata,
   output logic [31:0] avgpool2d_0_avm_unnamed_avgpool2d0_byteenable,
   input logic avgpool2d_0_avm_unnamed_avgpool2d0_waitrequest,
   input logic [255:0] avgpool2d_0_avm_unnamed_avgpool2d0_readdata,
   input logic avgpool2d_0_avm_unnamed_avgpool2d0_readdatavalid,
   input logic avgpool2d_0_avm_unnamed_avgpool2d0_writeack,
   // AVM avgpool2d_0_avm_unnamed_avgpool2d1
   output logic avgpool2d_0_avm_unnamed_avgpool2d1_enable,
   output logic avgpool2d_0_avm_unnamed_avgpool2d1_read,
   output logic avgpool2d_0_avm_unnamed_avgpool2d1_write,
   output logic [4:0] avgpool2d_0_avm_unnamed_avgpool2d1_burstcount,
   output logic [30:0] avgpool2d_0_avm_unnamed_avgpool2d1_address,
   output logic [255:0] avgpool2d_0_avm_unnamed_avgpool2d1_writedata,
   output logic [31:0] avgpool2d_0_avm_unnamed_avgpool2d1_byteenable,
   input logic avgpool2d_0_avm_unnamed_avgpool2d1_waitrequest,
   input logic [255:0] avgpool2d_0_avm_unnamed_avgpool2d1_readdata,
   input logic avgpool2d_0_avm_unnamed_avgpool2d1_readdatavalid,
   input logic avgpool2d_0_avm_unnamed_avgpool2d1_writeack
);
   logic avgpool2d_start;
   logic [0:0] avgpool2d_start_chain;
   logic [0:0] avgpool2d_start_kernel_copy;
   logic [0:0] avgpool2d_start_task_fd;
   logic [0:0] avgpool2d_start_finish_element;
   logic avgpool2d_finish;
   logic [0:0] avgpool2d_finish_kernel_copy;
   logic [0:0] avgpool2d_finish_chain;
   logic [31:0] avgpool2d_global_size [2:0];
   logic [31:0] avgpool2d_num_groups [2:0];
   logic [31:0] avgpool2d_local_size [2:0];
   logic [31:0] avgpool2d_global_offset [2:0];
   logic [31:0] avgpool2d_work_dim;
   logic [31:0] avgpool2d_wg_size;
   logic [0:0] avgpool2d_wg_disp_stall_in;
   logic [0:0] avgpool2d_wg_disp_stall_in_lookahead;
   logic [0:0] avgpool2d_wg_disp_valid_out;
   logic avgpool2d_wg_disp_start_out;
   logic [31:0] avgpool2d_wg_disp_group_id_out [2:0];
   logic [31:0] avgpool2d_wg_disp_global_id_base_out [2:0];
   logic avgpool2d_wg_disp_dispatched_all_groups;
   logic [31:0] avgpool2d_global_id [1][2:0];
   logic [31:0] avgpool2d_local_id [1][2:0];
   logic [31:0] avgpool2d_group_id [1][2:0];
   logic [0:0] avgpool2d_pending_write;
   logic [0:0] avgpool2d_lsu_active;
   logic [0:0] avgpool2d_valid_in;
   logic [0:0] avgpool2d_valid_out;
   logic [0:0] avgpool2d_stall_in;
   logic [0:0] avgpool2d_stall_out;
   logic avgpool2d_cra_pending_write;
   logic avgpool2d_cra_lsu_active;
   logic avgpool2d_cra_valid_in;
   logic [191:0] avgpool2d_kernel_arguments;

   assign avgpool2d_start_chain[0] = avgpool2d_start;
   assign avgpool2d_finish_chain[0] = 1'b1;
   assign avgpool2d_cra_pending_write = |avgpool2d_pending_write;
   assign avgpool2d_cra_lsu_active = |avgpool2d_lsu_active;
   assign avgpool2d_cra_valid_in = |avgpool2d_valid_in;
   assign avgpool2d_stall_in = 0;
   // INST avgpool2d_workgroup_dispatcher of acl_work_group_dispatcher
   acl_work_group_dispatcher
   #(
      .WIDTH(32),
      .NUM_COPIES(1),
      .RUN_FOREVER(0),
      .FAMILY("Cyclone V")
   )
   avgpool2d_workgroup_dispatcher
   (
      .clock(clock),
      .resetn(resetn),
      .start(avgpool2d_start),
      .num_groups(avgpool2d_num_groups),
      .local_size(avgpool2d_local_size),
      .stall_in(avgpool2d_wg_disp_stall_in),
      .stall_in_lookahead(avgpool2d_wg_disp_stall_in_lookahead),
      .valid_out(avgpool2d_wg_disp_valid_out),
      .group_id_out(avgpool2d_wg_disp_group_id_out),
      .global_id_base_out(avgpool2d_wg_disp_global_id_base_out),
      .start_out(avgpool2d_wg_disp_start_out),
      .dispatched_all_groups(avgpool2d_wg_disp_dispatched_all_groups)
   );

   // INST avgpool2d_finish_detector of acl_kernel_finish_detector
   acl_kernel_finish_detector
   #(
      .NUM_COPIES(1),
      .WG_SIZE_W(32),
      .GLOBAL_ID_W(32),
      .TESSELLATION_SIZE(0),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0)
   )
   avgpool2d_finish_detector
   (
      .clock(clock),
      .resetn(resetn),
      .start(avgpool2d_start),
      .wg_size(avgpool2d_wg_size),
      .wg_dispatch_valid_out(avgpool2d_wg_disp_valid_out),
      .wg_dispatch_stall_in(avgpool2d_wg_disp_stall_in),
      .dispatched_all_groups(avgpool2d_wg_disp_dispatched_all_groups),
      .kernel_copy_valid_out(avgpool2d_valid_out),
      .kernel_copy_stall_in(avgpool2d_stall_in),
      .pending_writes(avgpool2d_cra_pending_write),
      .finish(avgpool2d_finish)
   );

   // INST avgpool2d_cra_slave_inst of avgpool2d_function_cra_slave
   avgpool2d_function_cra_slave avgpool2d_cra_slave_inst
   (
      .clock(clock),
      .resetn(resetn),
      .start(avgpool2d_start),
      .finish(avgpool2d_finish),
      .global_offset_0(avgpool2d_global_offset[0]),
      .global_offset_1(avgpool2d_global_offset[1]),
      .global_offset_2(avgpool2d_global_offset[2]),
      .work_dim(avgpool2d_work_dim),
      .has_a_lsu_active(avgpool2d_cra_lsu_active),
      .has_a_write_pending(avgpool2d_cra_pending_write),
      .valid_in(avgpool2d_cra_valid_in),
      .global_size_0(avgpool2d_global_size[0]),
      .global_size_1(avgpool2d_global_size[1]),
      .global_size_2(avgpool2d_global_size[2]),
      .num_groups_0(avgpool2d_num_groups[0]),
      .num_groups_1(avgpool2d_num_groups[1]),
      .num_groups_2(avgpool2d_num_groups[2]),
      .local_size_0(avgpool2d_local_size[0]),
      .local_size_1(avgpool2d_local_size[1]),
      .local_size_2(avgpool2d_local_size[2]),
      .workgroup_size(avgpool2d_wg_size),
      .kernel_arguments(avgpool2d_kernel_arguments),
      .cra_irq(cra_irq_avgpool2d),
      // AVS avs_cra
      .avs_cra_enable(avs_avgpool2d_cra_enable),
      .avs_cra_read(avs_avgpool2d_cra_read),
      .avs_cra_write(avs_avgpool2d_cra_write),
      .avs_cra_address(avs_avgpool2d_cra_address),
      .avs_cra_writedata(avs_avgpool2d_cra_writedata),
      .avs_cra_byteenable(avs_avgpool2d_cra_byteenable),
      .avs_cra_readdata(avs_avgpool2d_cra_readdata),
      .avs_cra_readdatavalid(avs_avgpool2d_cra_readdatavalid)
   );

   // INST avgpool2d_id_iter_inst_0 of acl_id_iterator
   acl_id_iterator
   #(
      .WIDTH(32),
      .LOCAL_WIDTH_X(32),
      .LOCAL_WIDTH_Y(32),
      .LOCAL_WIDTH_Z(32),
      .STALL_OUT_LOOKAHEAD_COUNT(1),
      .VALID_OUT_LOOKAHEAD_COUNT(3),
      .ENABLE_TESSELLATION(0),
      .FAMILY("Cyclone V")
   )
   avgpool2d_id_iter_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start(avgpool2d_wg_disp_start_out),
      .valid_in(avgpool2d_wg_disp_valid_out[0]),
      .stall_out(avgpool2d_wg_disp_stall_in[0]),
      .stall_out_lookahead(avgpool2d_wg_disp_stall_in_lookahead[0]),
      .stall_in(avgpool2d_stall_out[0]),
      .valid_out(avgpool2d_valid_in[0]),
      .group_id_in(avgpool2d_wg_disp_group_id_out),
      .global_id_base_in(avgpool2d_wg_disp_global_id_base_out),
      .local_size(avgpool2d_local_size),
      .global_size(avgpool2d_global_size),
      .local_id(avgpool2d_local_id[0]),
      .global_id(avgpool2d_global_id[0]),
      .group_id(avgpool2d_group_id[0])
   );

   // INST avgpool2d_inst_0 of avgpool2d_top_wrapper_0
   avgpool2d_top_wrapper_0 avgpool2d_inst_0
   (
      .start(avgpool2d_start_kernel_copy[0]),
      .kernel_arguments(avgpool2d_kernel_arguments),
      .work_dim(avgpool2d_work_dim),
      .global_offset(avgpool2d_global_offset),
      .kernel_valid_out(avgpool2d_valid_out[0]),
      .has_a_write_pending(avgpool2d_pending_write[0]),
      .has_a_lsu_active(avgpool2d_lsu_active[0]),
      .global_id(avgpool2d_global_id[0]),
      .local_id(avgpool2d_local_id[0]),
      .group_id(avgpool2d_group_id[0]),
      .global_size(avgpool2d_global_size),
      .local_size(avgpool2d_local_size),
      .num_groups(avgpool2d_num_groups),
      .workgroup_size(avgpool2d_wg_size),
      .kernel_stall_out(avgpool2d_stall_out[0]),
      .kernel_valid_in(avgpool2d_valid_in[0]),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_unnamed_avgpool2d0
      .avm_unnamed_avgpool2d0_enable(avgpool2d_0_avm_unnamed_avgpool2d0_enable),
      .avm_unnamed_avgpool2d0_read(avgpool2d_0_avm_unnamed_avgpool2d0_read),
      .avm_unnamed_avgpool2d0_write(avgpool2d_0_avm_unnamed_avgpool2d0_write),
      .avm_unnamed_avgpool2d0_burstcount(avgpool2d_0_avm_unnamed_avgpool2d0_burstcount),
      .avm_unnamed_avgpool2d0_address(avgpool2d_0_avm_unnamed_avgpool2d0_address),
      .avm_unnamed_avgpool2d0_writedata(avgpool2d_0_avm_unnamed_avgpool2d0_writedata),
      .avm_unnamed_avgpool2d0_byteenable(avgpool2d_0_avm_unnamed_avgpool2d0_byteenable),
      .avm_unnamed_avgpool2d0_waitrequest(avgpool2d_0_avm_unnamed_avgpool2d0_waitrequest),
      .avm_unnamed_avgpool2d0_readdata(avgpool2d_0_avm_unnamed_avgpool2d0_readdata),
      .avm_unnamed_avgpool2d0_readdatavalid(avgpool2d_0_avm_unnamed_avgpool2d0_readdatavalid),
      .avm_unnamed_avgpool2d0_writeack(avgpool2d_0_avm_unnamed_avgpool2d0_writeack),
      // AVM avm_unnamed_avgpool2d1
      .avm_unnamed_avgpool2d1_enable(avgpool2d_0_avm_unnamed_avgpool2d1_enable),
      .avm_unnamed_avgpool2d1_read(avgpool2d_0_avm_unnamed_avgpool2d1_read),
      .avm_unnamed_avgpool2d1_write(avgpool2d_0_avm_unnamed_avgpool2d1_write),
      .avm_unnamed_avgpool2d1_burstcount(avgpool2d_0_avm_unnamed_avgpool2d1_burstcount),
      .avm_unnamed_avgpool2d1_address(avgpool2d_0_avm_unnamed_avgpool2d1_address),
      .avm_unnamed_avgpool2d1_writedata(avgpool2d_0_avm_unnamed_avgpool2d1_writedata),
      .avm_unnamed_avgpool2d1_byteenable(avgpool2d_0_avm_unnamed_avgpool2d1_byteenable),
      .avm_unnamed_avgpool2d1_waitrequest(avgpool2d_0_avm_unnamed_avgpool2d1_waitrequest),
      .avm_unnamed_avgpool2d1_readdata(avgpool2d_0_avm_unnamed_avgpool2d1_readdata),
      .avm_unnamed_avgpool2d1_readdatavalid(avgpool2d_0_avm_unnamed_avgpool2d1_readdatavalid),
      .avm_unnamed_avgpool2d1_writeack(avgpool2d_0_avm_unnamed_avgpool2d1_writeack)
   );

   // INST avgpool2d_start_elem_inst_0 of acl_start_signal_chain_element
   acl_start_signal_chain_element
   #(
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0)
   )
   avgpool2d_start_elem_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start_in(avgpool2d_start_chain[0]),
      .start_kernel(avgpool2d_start_kernel_copy[0]),
      .start_finish_detector(avgpool2d_start_task_fd[0]),
      .start_finish_chain_element(avgpool2d_start_finish_element[0]),
      .start_chain()
   );

endmodule

/////////////////////////////////////////////////////////////////
// MODULE conv2d1x1_std_ic_partition_wrapper
/////////////////////////////////////////////////////////////////
module conv2d1x1_std_ic_partition_wrapper
(
   input logic clock,
   input logic clock2x,
   input logic resetn,
   output logic cra_irq_conv2d1x1,
   // AVS avs_conv2d1x1_cra
   input logic avs_conv2d1x1_cra_enable,
   input logic avs_conv2d1x1_cra_read,
   input logic avs_conv2d1x1_cra_write,
   input logic [4:0] avs_conv2d1x1_cra_address,
   input logic [63:0] avs_conv2d1x1_cra_writedata,
   input logic [7:0] avs_conv2d1x1_cra_byteenable,
   output logic [63:0] avs_conv2d1x1_cra_readdata,
   output logic avs_conv2d1x1_cra_readdatavalid,
   // AVM conv2d1x1_0_avm_memcoalesce_filter_weight_load_0
   output logic conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_enable,
   output logic conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_read,
   output logic conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_write,
   output logic [4:0] conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_burstcount,
   output logic [30:0] conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_address,
   output logic [255:0] conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_writedata,
   output logic [31:0] conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_byteenable,
   input logic conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_waitrequest,
   input logic [255:0] conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_readdata,
   input logic conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_readdatavalid,
   input logic conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_writeack,
   // AVM conv2d1x1_0_avm_unnamed_conv2d1x10
   output logic conv2d1x1_0_avm_unnamed_conv2d1x10_enable,
   output logic conv2d1x1_0_avm_unnamed_conv2d1x10_read,
   output logic conv2d1x1_0_avm_unnamed_conv2d1x10_write,
   output logic [4:0] conv2d1x1_0_avm_unnamed_conv2d1x10_burstcount,
   output logic [30:0] conv2d1x1_0_avm_unnamed_conv2d1x10_address,
   output logic [255:0] conv2d1x1_0_avm_unnamed_conv2d1x10_writedata,
   output logic [31:0] conv2d1x1_0_avm_unnamed_conv2d1x10_byteenable,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x10_waitrequest,
   input logic [255:0] conv2d1x1_0_avm_unnamed_conv2d1x10_readdata,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x10_readdatavalid,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x10_writeack,
   // AVM conv2d1x1_0_avm_unnamed_conv2d1x13
   output logic conv2d1x1_0_avm_unnamed_conv2d1x13_enable,
   output logic conv2d1x1_0_avm_unnamed_conv2d1x13_read,
   output logic conv2d1x1_0_avm_unnamed_conv2d1x13_write,
   output logic [4:0] conv2d1x1_0_avm_unnamed_conv2d1x13_burstcount,
   output logic [30:0] conv2d1x1_0_avm_unnamed_conv2d1x13_address,
   output logic [255:0] conv2d1x1_0_avm_unnamed_conv2d1x13_writedata,
   output logic [31:0] conv2d1x1_0_avm_unnamed_conv2d1x13_byteenable,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x13_waitrequest,
   input logic [255:0] conv2d1x1_0_avm_unnamed_conv2d1x13_readdata,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x13_readdatavalid,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x13_writeack,
   // AVM conv2d1x1_0_avm_unnamed_conv2d1x14
   output logic conv2d1x1_0_avm_unnamed_conv2d1x14_enable,
   output logic conv2d1x1_0_avm_unnamed_conv2d1x14_read,
   output logic conv2d1x1_0_avm_unnamed_conv2d1x14_write,
   output logic [4:0] conv2d1x1_0_avm_unnamed_conv2d1x14_burstcount,
   output logic [30:0] conv2d1x1_0_avm_unnamed_conv2d1x14_address,
   output logic [255:0] conv2d1x1_0_avm_unnamed_conv2d1x14_writedata,
   output logic [31:0] conv2d1x1_0_avm_unnamed_conv2d1x14_byteenable,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x14_waitrequest,
   input logic [255:0] conv2d1x1_0_avm_unnamed_conv2d1x14_readdata,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x14_readdatavalid,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x14_writeack,
   // AVM conv2d1x1_0_avm_unnamed_conv2d1x15
   output logic conv2d1x1_0_avm_unnamed_conv2d1x15_enable,
   output logic conv2d1x1_0_avm_unnamed_conv2d1x15_read,
   output logic conv2d1x1_0_avm_unnamed_conv2d1x15_write,
   output logic [4:0] conv2d1x1_0_avm_unnamed_conv2d1x15_burstcount,
   output logic [30:0] conv2d1x1_0_avm_unnamed_conv2d1x15_address,
   output logic [255:0] conv2d1x1_0_avm_unnamed_conv2d1x15_writedata,
   output logic [31:0] conv2d1x1_0_avm_unnamed_conv2d1x15_byteenable,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x15_waitrequest,
   input logic [255:0] conv2d1x1_0_avm_unnamed_conv2d1x15_readdata,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x15_readdatavalid,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x15_writeack,
   // AVM conv2d1x1_0_avm_unnamed_conv2d1x17
   output logic conv2d1x1_0_avm_unnamed_conv2d1x17_enable,
   output logic conv2d1x1_0_avm_unnamed_conv2d1x17_read,
   output logic conv2d1x1_0_avm_unnamed_conv2d1x17_write,
   output logic [4:0] conv2d1x1_0_avm_unnamed_conv2d1x17_burstcount,
   output logic [30:0] conv2d1x1_0_avm_unnamed_conv2d1x17_address,
   output logic [255:0] conv2d1x1_0_avm_unnamed_conv2d1x17_writedata,
   output logic [31:0] conv2d1x1_0_avm_unnamed_conv2d1x17_byteenable,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x17_waitrequest,
   input logic [255:0] conv2d1x1_0_avm_unnamed_conv2d1x17_readdata,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x17_readdatavalid,
   input logic conv2d1x1_0_avm_unnamed_conv2d1x17_writeack
);
   logic conv2d1x1_start;
   logic [0:0] conv2d1x1_start_chain;
   logic [0:0] conv2d1x1_start_kernel_copy;
   logic [0:0] conv2d1x1_start_task_fd;
   logic [0:0] conv2d1x1_start_finish_element;
   logic conv2d1x1_finish;
   logic [0:0] conv2d1x1_finish_kernel_copy;
   logic [0:0] conv2d1x1_finish_chain;
   logic [31:0] conv2d1x1_global_size [2:0];
   logic [31:0] conv2d1x1_num_groups [2:0];
   logic [31:0] conv2d1x1_local_size [2:0];
   logic [31:0] conv2d1x1_global_offset [2:0];
   logic [31:0] conv2d1x1_work_dim;
   logic [31:0] conv2d1x1_wg_size;
   logic [0:0] conv2d1x1_wg_disp_stall_in;
   logic [0:0] conv2d1x1_wg_disp_stall_in_lookahead;
   logic [0:0] conv2d1x1_wg_disp_valid_out;
   logic conv2d1x1_wg_disp_start_out;
   logic [31:0] conv2d1x1_wg_disp_group_id_out [2:0];
   logic [31:0] conv2d1x1_wg_disp_global_id_base_out [2:0];
   logic conv2d1x1_wg_disp_dispatched_all_groups;
   logic [31:0] conv2d1x1_global_id [1][2:0];
   logic [31:0] conv2d1x1_local_id [1][2:0];
   logic [31:0] conv2d1x1_group_id [1][2:0];
   logic [0:0] conv2d1x1_pending_write;
   logic [0:0] conv2d1x1_lsu_active;
   logic [0:0] conv2d1x1_valid_in;
   logic [0:0] conv2d1x1_valid_out;
   logic [0:0] conv2d1x1_stall_in;
   logic [0:0] conv2d1x1_stall_out;
   logic conv2d1x1_cra_pending_write;
   logic conv2d1x1_cra_lsu_active;
   logic conv2d1x1_cra_valid_in;
   logic [351:0] conv2d1x1_kernel_arguments;

   assign conv2d1x1_start_chain[0] = conv2d1x1_start;
   assign conv2d1x1_finish_chain[0] = 1'b1;
   assign conv2d1x1_cra_pending_write = |conv2d1x1_pending_write;
   assign conv2d1x1_cra_lsu_active = |conv2d1x1_lsu_active;
   assign conv2d1x1_cra_valid_in = |conv2d1x1_valid_in;
   assign conv2d1x1_stall_in = 0;
   // INST conv2d1x1_workgroup_dispatcher of acl_work_group_dispatcher
   acl_work_group_dispatcher
   #(
      .WIDTH(32),
      .NUM_COPIES(1),
      .RUN_FOREVER(0),
      .FAMILY("Cyclone V")
   )
   conv2d1x1_workgroup_dispatcher
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d1x1_start),
      .num_groups(conv2d1x1_num_groups),
      .local_size(conv2d1x1_local_size),
      .stall_in(conv2d1x1_wg_disp_stall_in),
      .stall_in_lookahead(conv2d1x1_wg_disp_stall_in_lookahead),
      .valid_out(conv2d1x1_wg_disp_valid_out),
      .group_id_out(conv2d1x1_wg_disp_group_id_out),
      .global_id_base_out(conv2d1x1_wg_disp_global_id_base_out),
      .start_out(conv2d1x1_wg_disp_start_out),
      .dispatched_all_groups(conv2d1x1_wg_disp_dispatched_all_groups)
   );

   // INST conv2d1x1_finish_detector of acl_kernel_finish_detector
   acl_kernel_finish_detector
   #(
      .NUM_COPIES(1),
      .WG_SIZE_W(32),
      .GLOBAL_ID_W(32),
      .TESSELLATION_SIZE(0),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0)
   )
   conv2d1x1_finish_detector
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d1x1_start),
      .wg_size(conv2d1x1_wg_size),
      .wg_dispatch_valid_out(conv2d1x1_wg_disp_valid_out),
      .wg_dispatch_stall_in(conv2d1x1_wg_disp_stall_in),
      .dispatched_all_groups(conv2d1x1_wg_disp_dispatched_all_groups),
      .kernel_copy_valid_out(conv2d1x1_valid_out),
      .kernel_copy_stall_in(conv2d1x1_stall_in),
      .pending_writes(conv2d1x1_cra_pending_write),
      .finish(conv2d1x1_finish)
   );

   // INST conv2d1x1_cra_slave_inst of conv2d1x1_function_cra_slave
   conv2d1x1_function_cra_slave conv2d1x1_cra_slave_inst
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d1x1_start),
      .finish(conv2d1x1_finish),
      .global_offset_0(conv2d1x1_global_offset[0]),
      .global_offset_1(conv2d1x1_global_offset[1]),
      .global_offset_2(conv2d1x1_global_offset[2]),
      .work_dim(conv2d1x1_work_dim),
      .has_a_lsu_active(conv2d1x1_cra_lsu_active),
      .has_a_write_pending(conv2d1x1_cra_pending_write),
      .valid_in(conv2d1x1_cra_valid_in),
      .global_size_0(conv2d1x1_global_size[0]),
      .global_size_1(conv2d1x1_global_size[1]),
      .global_size_2(conv2d1x1_global_size[2]),
      .num_groups_0(conv2d1x1_num_groups[0]),
      .num_groups_1(conv2d1x1_num_groups[1]),
      .num_groups_2(conv2d1x1_num_groups[2]),
      .local_size_0(conv2d1x1_local_size[0]),
      .local_size_1(conv2d1x1_local_size[1]),
      .local_size_2(conv2d1x1_local_size[2]),
      .workgroup_size(conv2d1x1_wg_size),
      .kernel_arguments(conv2d1x1_kernel_arguments),
      .cra_irq(cra_irq_conv2d1x1),
      // AVS avs_cra
      .avs_cra_enable(avs_conv2d1x1_cra_enable),
      .avs_cra_read(avs_conv2d1x1_cra_read),
      .avs_cra_write(avs_conv2d1x1_cra_write),
      .avs_cra_address(avs_conv2d1x1_cra_address),
      .avs_cra_writedata(avs_conv2d1x1_cra_writedata),
      .avs_cra_byteenable(avs_conv2d1x1_cra_byteenable),
      .avs_cra_readdata(avs_conv2d1x1_cra_readdata),
      .avs_cra_readdatavalid(avs_conv2d1x1_cra_readdatavalid)
   );

   // INST conv2d1x1_id_iter_inst_0 of acl_id_iterator
   acl_id_iterator
   #(
      .WIDTH(32),
      .LOCAL_WIDTH_X(32),
      .LOCAL_WIDTH_Y(32),
      .LOCAL_WIDTH_Z(32),
      .STALL_OUT_LOOKAHEAD_COUNT(1),
      .VALID_OUT_LOOKAHEAD_COUNT(3),
      .ENABLE_TESSELLATION(0),
      .FAMILY("Cyclone V")
   )
   conv2d1x1_id_iter_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d1x1_wg_disp_start_out),
      .valid_in(conv2d1x1_wg_disp_valid_out[0]),
      .stall_out(conv2d1x1_wg_disp_stall_in[0]),
      .stall_out_lookahead(conv2d1x1_wg_disp_stall_in_lookahead[0]),
      .stall_in(conv2d1x1_stall_out[0]),
      .valid_out(conv2d1x1_valid_in[0]),
      .group_id_in(conv2d1x1_wg_disp_group_id_out),
      .global_id_base_in(conv2d1x1_wg_disp_global_id_base_out),
      .local_size(conv2d1x1_local_size),
      .global_size(conv2d1x1_global_size),
      .local_id(conv2d1x1_local_id[0]),
      .global_id(conv2d1x1_global_id[0]),
      .group_id(conv2d1x1_group_id[0])
   );

   // INST conv2d1x1_inst_0 of conv2d1x1_top_wrapper_0
   conv2d1x1_top_wrapper_0 conv2d1x1_inst_0
   (
      .start(conv2d1x1_start_kernel_copy[0]),
      .kernel_arguments(conv2d1x1_kernel_arguments),
      .work_dim(conv2d1x1_work_dim),
      .global_offset(conv2d1x1_global_offset),
      .kernel_valid_out(conv2d1x1_valid_out[0]),
      .has_a_write_pending(conv2d1x1_pending_write[0]),
      .has_a_lsu_active(conv2d1x1_lsu_active[0]),
      .global_id(conv2d1x1_global_id[0]),
      .local_id(conv2d1x1_local_id[0]),
      .group_id(conv2d1x1_group_id[0]),
      .global_size(conv2d1x1_global_size),
      .local_size(conv2d1x1_local_size),
      .num_groups(conv2d1x1_num_groups),
      .workgroup_size(conv2d1x1_wg_size),
      .kernel_stall_out(conv2d1x1_stall_out[0]),
      .kernel_valid_in(conv2d1x1_valid_in[0]),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_memcoalesce_filter_weight_load_0
      .avm_memcoalesce_filter_weight_load_0_enable(conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_enable),
      .avm_memcoalesce_filter_weight_load_0_read(conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_read),
      .avm_memcoalesce_filter_weight_load_0_write(conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_write),
      .avm_memcoalesce_filter_weight_load_0_burstcount(conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_burstcount),
      .avm_memcoalesce_filter_weight_load_0_address(conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_address),
      .avm_memcoalesce_filter_weight_load_0_writedata(conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_writedata),
      .avm_memcoalesce_filter_weight_load_0_byteenable(conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_byteenable),
      .avm_memcoalesce_filter_weight_load_0_waitrequest(conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_waitrequest),
      .avm_memcoalesce_filter_weight_load_0_readdata(conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_readdata),
      .avm_memcoalesce_filter_weight_load_0_readdatavalid(conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_readdatavalid),
      .avm_memcoalesce_filter_weight_load_0_writeack(conv2d1x1_0_avm_memcoalesce_filter_weight_load_0_writeack),
      // AVM avm_unnamed_conv2d1x10
      .avm_unnamed_conv2d1x10_enable(conv2d1x1_0_avm_unnamed_conv2d1x10_enable),
      .avm_unnamed_conv2d1x10_read(conv2d1x1_0_avm_unnamed_conv2d1x10_read),
      .avm_unnamed_conv2d1x10_write(conv2d1x1_0_avm_unnamed_conv2d1x10_write),
      .avm_unnamed_conv2d1x10_burstcount(conv2d1x1_0_avm_unnamed_conv2d1x10_burstcount),
      .avm_unnamed_conv2d1x10_address(conv2d1x1_0_avm_unnamed_conv2d1x10_address),
      .avm_unnamed_conv2d1x10_writedata(conv2d1x1_0_avm_unnamed_conv2d1x10_writedata),
      .avm_unnamed_conv2d1x10_byteenable(conv2d1x1_0_avm_unnamed_conv2d1x10_byteenable),
      .avm_unnamed_conv2d1x10_waitrequest(conv2d1x1_0_avm_unnamed_conv2d1x10_waitrequest),
      .avm_unnamed_conv2d1x10_readdata(conv2d1x1_0_avm_unnamed_conv2d1x10_readdata),
      .avm_unnamed_conv2d1x10_readdatavalid(conv2d1x1_0_avm_unnamed_conv2d1x10_readdatavalid),
      .avm_unnamed_conv2d1x10_writeack(conv2d1x1_0_avm_unnamed_conv2d1x10_writeack),
      // AVM avm_unnamed_conv2d1x13
      .avm_unnamed_conv2d1x13_enable(conv2d1x1_0_avm_unnamed_conv2d1x13_enable),
      .avm_unnamed_conv2d1x13_read(conv2d1x1_0_avm_unnamed_conv2d1x13_read),
      .avm_unnamed_conv2d1x13_write(conv2d1x1_0_avm_unnamed_conv2d1x13_write),
      .avm_unnamed_conv2d1x13_burstcount(conv2d1x1_0_avm_unnamed_conv2d1x13_burstcount),
      .avm_unnamed_conv2d1x13_address(conv2d1x1_0_avm_unnamed_conv2d1x13_address),
      .avm_unnamed_conv2d1x13_writedata(conv2d1x1_0_avm_unnamed_conv2d1x13_writedata),
      .avm_unnamed_conv2d1x13_byteenable(conv2d1x1_0_avm_unnamed_conv2d1x13_byteenable),
      .avm_unnamed_conv2d1x13_waitrequest(conv2d1x1_0_avm_unnamed_conv2d1x13_waitrequest),
      .avm_unnamed_conv2d1x13_readdata(conv2d1x1_0_avm_unnamed_conv2d1x13_readdata),
      .avm_unnamed_conv2d1x13_readdatavalid(conv2d1x1_0_avm_unnamed_conv2d1x13_readdatavalid),
      .avm_unnamed_conv2d1x13_writeack(conv2d1x1_0_avm_unnamed_conv2d1x13_writeack),
      // AVM avm_unnamed_conv2d1x14
      .avm_unnamed_conv2d1x14_enable(conv2d1x1_0_avm_unnamed_conv2d1x14_enable),
      .avm_unnamed_conv2d1x14_read(conv2d1x1_0_avm_unnamed_conv2d1x14_read),
      .avm_unnamed_conv2d1x14_write(conv2d1x1_0_avm_unnamed_conv2d1x14_write),
      .avm_unnamed_conv2d1x14_burstcount(conv2d1x1_0_avm_unnamed_conv2d1x14_burstcount),
      .avm_unnamed_conv2d1x14_address(conv2d1x1_0_avm_unnamed_conv2d1x14_address),
      .avm_unnamed_conv2d1x14_writedata(conv2d1x1_0_avm_unnamed_conv2d1x14_writedata),
      .avm_unnamed_conv2d1x14_byteenable(conv2d1x1_0_avm_unnamed_conv2d1x14_byteenable),
      .avm_unnamed_conv2d1x14_waitrequest(conv2d1x1_0_avm_unnamed_conv2d1x14_waitrequest),
      .avm_unnamed_conv2d1x14_readdata(conv2d1x1_0_avm_unnamed_conv2d1x14_readdata),
      .avm_unnamed_conv2d1x14_readdatavalid(conv2d1x1_0_avm_unnamed_conv2d1x14_readdatavalid),
      .avm_unnamed_conv2d1x14_writeack(conv2d1x1_0_avm_unnamed_conv2d1x14_writeack),
      // AVM avm_unnamed_conv2d1x15
      .avm_unnamed_conv2d1x15_enable(conv2d1x1_0_avm_unnamed_conv2d1x15_enable),
      .avm_unnamed_conv2d1x15_read(conv2d1x1_0_avm_unnamed_conv2d1x15_read),
      .avm_unnamed_conv2d1x15_write(conv2d1x1_0_avm_unnamed_conv2d1x15_write),
      .avm_unnamed_conv2d1x15_burstcount(conv2d1x1_0_avm_unnamed_conv2d1x15_burstcount),
      .avm_unnamed_conv2d1x15_address(conv2d1x1_0_avm_unnamed_conv2d1x15_address),
      .avm_unnamed_conv2d1x15_writedata(conv2d1x1_0_avm_unnamed_conv2d1x15_writedata),
      .avm_unnamed_conv2d1x15_byteenable(conv2d1x1_0_avm_unnamed_conv2d1x15_byteenable),
      .avm_unnamed_conv2d1x15_waitrequest(conv2d1x1_0_avm_unnamed_conv2d1x15_waitrequest),
      .avm_unnamed_conv2d1x15_readdata(conv2d1x1_0_avm_unnamed_conv2d1x15_readdata),
      .avm_unnamed_conv2d1x15_readdatavalid(conv2d1x1_0_avm_unnamed_conv2d1x15_readdatavalid),
      .avm_unnamed_conv2d1x15_writeack(conv2d1x1_0_avm_unnamed_conv2d1x15_writeack),
      // AVM avm_unnamed_conv2d1x17
      .avm_unnamed_conv2d1x17_enable(conv2d1x1_0_avm_unnamed_conv2d1x17_enable),
      .avm_unnamed_conv2d1x17_read(conv2d1x1_0_avm_unnamed_conv2d1x17_read),
      .avm_unnamed_conv2d1x17_write(conv2d1x1_0_avm_unnamed_conv2d1x17_write),
      .avm_unnamed_conv2d1x17_burstcount(conv2d1x1_0_avm_unnamed_conv2d1x17_burstcount),
      .avm_unnamed_conv2d1x17_address(conv2d1x1_0_avm_unnamed_conv2d1x17_address),
      .avm_unnamed_conv2d1x17_writedata(conv2d1x1_0_avm_unnamed_conv2d1x17_writedata),
      .avm_unnamed_conv2d1x17_byteenable(conv2d1x1_0_avm_unnamed_conv2d1x17_byteenable),
      .avm_unnamed_conv2d1x17_waitrequest(conv2d1x1_0_avm_unnamed_conv2d1x17_waitrequest),
      .avm_unnamed_conv2d1x17_readdata(conv2d1x1_0_avm_unnamed_conv2d1x17_readdata),
      .avm_unnamed_conv2d1x17_readdatavalid(conv2d1x1_0_avm_unnamed_conv2d1x17_readdatavalid),
      .avm_unnamed_conv2d1x17_writeack(conv2d1x1_0_avm_unnamed_conv2d1x17_writeack)
   );

   // INST conv2d1x1_start_elem_inst_0 of acl_start_signal_chain_element
   acl_start_signal_chain_element
   #(
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0)
   )
   conv2d1x1_start_elem_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start_in(conv2d1x1_start_chain[0]),
      .start_kernel(conv2d1x1_start_kernel_copy[0]),
      .start_finish_detector(conv2d1x1_start_task_fd[0]),
      .start_finish_chain_element(conv2d1x1_start_finish_element[0]),
      .start_chain()
   );

endmodule

/////////////////////////////////////////////////////////////////
// MODULE conv2d3x3_std_ic_partition_wrapper
/////////////////////////////////////////////////////////////////
module conv2d3x3_std_ic_partition_wrapper
(
   input logic clock,
   input logic clock2x,
   input logic resetn,
   output logic cra_irq_conv2d3x3,
   // AVS avs_conv2d3x3_cra
   input logic avs_conv2d3x3_cra_enable,
   input logic avs_conv2d3x3_cra_read,
   input logic avs_conv2d3x3_cra_write,
   input logic [4:0] avs_conv2d3x3_cra_address,
   input logic [63:0] avs_conv2d3x3_cra_writedata,
   input logic [7:0] avs_conv2d3x3_cra_byteenable,
   output logic [63:0] avs_conv2d3x3_cra_readdata,
   output logic avs_conv2d3x3_cra_readdatavalid,
   // AVM conv2d3x3_0_avm_memcoalesce_filter_weight_load_0
   output logic conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_enable,
   output logic conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_read,
   output logic conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_write,
   output logic [4:0] conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_burstcount,
   output logic [30:0] conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_address,
   output logic [255:0] conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_writedata,
   output logic [31:0] conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_byteenable,
   input logic conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_waitrequest,
   input logic [255:0] conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_readdata,
   input logic conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_readdatavalid,
   input logic conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_writeack,
   // AVM conv2d3x3_0_avm_memcoalesce_input_im_load_0
   output logic conv2d3x3_0_avm_memcoalesce_input_im_load_0_enable,
   output logic conv2d3x3_0_avm_memcoalesce_input_im_load_0_read,
   output logic conv2d3x3_0_avm_memcoalesce_input_im_load_0_write,
   output logic [4:0] conv2d3x3_0_avm_memcoalesce_input_im_load_0_burstcount,
   output logic [30:0] conv2d3x3_0_avm_memcoalesce_input_im_load_0_address,
   output logic [255:0] conv2d3x3_0_avm_memcoalesce_input_im_load_0_writedata,
   output logic [31:0] conv2d3x3_0_avm_memcoalesce_input_im_load_0_byteenable,
   input logic conv2d3x3_0_avm_memcoalesce_input_im_load_0_waitrequest,
   input logic [255:0] conv2d3x3_0_avm_memcoalesce_input_im_load_0_readdata,
   input logic conv2d3x3_0_avm_memcoalesce_input_im_load_0_readdatavalid,
   input logic conv2d3x3_0_avm_memcoalesce_input_im_load_0_writeack,
   // AVM conv2d3x3_0_avm_unnamed_conv2d3x30
   output logic conv2d3x3_0_avm_unnamed_conv2d3x30_enable,
   output logic conv2d3x3_0_avm_unnamed_conv2d3x30_read,
   output logic conv2d3x3_0_avm_unnamed_conv2d3x30_write,
   output logic [4:0] conv2d3x3_0_avm_unnamed_conv2d3x30_burstcount,
   output logic [30:0] conv2d3x3_0_avm_unnamed_conv2d3x30_address,
   output logic [255:0] conv2d3x3_0_avm_unnamed_conv2d3x30_writedata,
   output logic [31:0] conv2d3x3_0_avm_unnamed_conv2d3x30_byteenable,
   input logic conv2d3x3_0_avm_unnamed_conv2d3x30_waitrequest,
   input logic [255:0] conv2d3x3_0_avm_unnamed_conv2d3x30_readdata,
   input logic conv2d3x3_0_avm_unnamed_conv2d3x30_readdatavalid,
   input logic conv2d3x3_0_avm_unnamed_conv2d3x30_writeack,
   // AVM conv2d3x3_0_avm_unnamed_conv2d3x35
   output logic conv2d3x3_0_avm_unnamed_conv2d3x35_enable,
   output logic conv2d3x3_0_avm_unnamed_conv2d3x35_read,
   output logic conv2d3x3_0_avm_unnamed_conv2d3x35_write,
   output logic [4:0] conv2d3x3_0_avm_unnamed_conv2d3x35_burstcount,
   output logic [30:0] conv2d3x3_0_avm_unnamed_conv2d3x35_address,
   output logic [255:0] conv2d3x3_0_avm_unnamed_conv2d3x35_writedata,
   output logic [31:0] conv2d3x3_0_avm_unnamed_conv2d3x35_byteenable,
   input logic conv2d3x3_0_avm_unnamed_conv2d3x35_waitrequest,
   input logic [255:0] conv2d3x3_0_avm_unnamed_conv2d3x35_readdata,
   input logic conv2d3x3_0_avm_unnamed_conv2d3x35_readdatavalid,
   input logic conv2d3x3_0_avm_unnamed_conv2d3x35_writeack
);
   logic conv2d3x3_start;
   logic [0:0] conv2d3x3_start_chain;
   logic [0:0] conv2d3x3_start_kernel_copy;
   logic [0:0] conv2d3x3_start_task_fd;
   logic [0:0] conv2d3x3_start_finish_element;
   logic conv2d3x3_finish;
   logic [0:0] conv2d3x3_finish_kernel_copy;
   logic [0:0] conv2d3x3_finish_chain;
   logic [31:0] conv2d3x3_global_size [2:0];
   logic [31:0] conv2d3x3_num_groups [2:0];
   logic [31:0] conv2d3x3_local_size [2:0];
   logic [31:0] conv2d3x3_global_offset [2:0];
   logic [31:0] conv2d3x3_work_dim;
   logic [31:0] conv2d3x3_wg_size;
   logic [0:0] conv2d3x3_wg_disp_stall_in;
   logic [0:0] conv2d3x3_wg_disp_stall_in_lookahead;
   logic [0:0] conv2d3x3_wg_disp_valid_out;
   logic conv2d3x3_wg_disp_start_out;
   logic [31:0] conv2d3x3_wg_disp_group_id_out [2:0];
   logic [31:0] conv2d3x3_wg_disp_global_id_base_out [2:0];
   logic conv2d3x3_wg_disp_dispatched_all_groups;
   logic [31:0] conv2d3x3_global_id [1][2:0];
   logic [31:0] conv2d3x3_local_id [1][2:0];
   logic [31:0] conv2d3x3_group_id [1][2:0];
   logic [0:0] conv2d3x3_pending_write;
   logic [0:0] conv2d3x3_lsu_active;
   logic [0:0] conv2d3x3_valid_in;
   logic [0:0] conv2d3x3_valid_out;
   logic [0:0] conv2d3x3_stall_in;
   logic [0:0] conv2d3x3_stall_out;
   logic conv2d3x3_cra_pending_write;
   logic conv2d3x3_cra_lsu_active;
   logic conv2d3x3_cra_valid_in;
   logic [447:0] conv2d3x3_kernel_arguments;

   assign conv2d3x3_start_chain[0] = conv2d3x3_start;
   assign conv2d3x3_finish_chain[0] = 1'b1;
   assign conv2d3x3_cra_pending_write = |conv2d3x3_pending_write;
   assign conv2d3x3_cra_lsu_active = |conv2d3x3_lsu_active;
   assign conv2d3x3_cra_valid_in = |conv2d3x3_valid_in;
   assign conv2d3x3_stall_in = 0;
   // INST conv2d3x3_workgroup_dispatcher of acl_work_group_dispatcher
   acl_work_group_dispatcher
   #(
      .WIDTH(32),
      .NUM_COPIES(1),
      .RUN_FOREVER(0),
      .FAMILY("Cyclone V")
   )
   conv2d3x3_workgroup_dispatcher
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d3x3_start),
      .num_groups(conv2d3x3_num_groups),
      .local_size(conv2d3x3_local_size),
      .stall_in(conv2d3x3_wg_disp_stall_in),
      .stall_in_lookahead(conv2d3x3_wg_disp_stall_in_lookahead),
      .valid_out(conv2d3x3_wg_disp_valid_out),
      .group_id_out(conv2d3x3_wg_disp_group_id_out),
      .global_id_base_out(conv2d3x3_wg_disp_global_id_base_out),
      .start_out(conv2d3x3_wg_disp_start_out),
      .dispatched_all_groups(conv2d3x3_wg_disp_dispatched_all_groups)
   );

   // INST conv2d3x3_finish_detector of acl_kernel_finish_detector
   acl_kernel_finish_detector
   #(
      .NUM_COPIES(1),
      .WG_SIZE_W(32),
      .GLOBAL_ID_W(32),
      .TESSELLATION_SIZE(0),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0)
   )
   conv2d3x3_finish_detector
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d3x3_start),
      .wg_size(conv2d3x3_wg_size),
      .wg_dispatch_valid_out(conv2d3x3_wg_disp_valid_out),
      .wg_dispatch_stall_in(conv2d3x3_wg_disp_stall_in),
      .dispatched_all_groups(conv2d3x3_wg_disp_dispatched_all_groups),
      .kernel_copy_valid_out(conv2d3x3_valid_out),
      .kernel_copy_stall_in(conv2d3x3_stall_in),
      .pending_writes(conv2d3x3_cra_pending_write),
      .finish(conv2d3x3_finish)
   );

   // INST conv2d3x3_cra_slave_inst of conv2d3x3_function_cra_slave
   conv2d3x3_function_cra_slave conv2d3x3_cra_slave_inst
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d3x3_start),
      .finish(conv2d3x3_finish),
      .global_offset_0(conv2d3x3_global_offset[0]),
      .global_offset_1(conv2d3x3_global_offset[1]),
      .global_offset_2(conv2d3x3_global_offset[2]),
      .work_dim(conv2d3x3_work_dim),
      .has_a_lsu_active(conv2d3x3_cra_lsu_active),
      .has_a_write_pending(conv2d3x3_cra_pending_write),
      .valid_in(conv2d3x3_cra_valid_in),
      .global_size_0(conv2d3x3_global_size[0]),
      .global_size_1(conv2d3x3_global_size[1]),
      .global_size_2(conv2d3x3_global_size[2]),
      .num_groups_0(conv2d3x3_num_groups[0]),
      .num_groups_1(conv2d3x3_num_groups[1]),
      .num_groups_2(conv2d3x3_num_groups[2]),
      .local_size_0(conv2d3x3_local_size[0]),
      .local_size_1(conv2d3x3_local_size[1]),
      .local_size_2(conv2d3x3_local_size[2]),
      .workgroup_size(conv2d3x3_wg_size),
      .kernel_arguments(conv2d3x3_kernel_arguments),
      .cra_irq(cra_irq_conv2d3x3),
      // AVS avs_cra
      .avs_cra_enable(avs_conv2d3x3_cra_enable),
      .avs_cra_read(avs_conv2d3x3_cra_read),
      .avs_cra_write(avs_conv2d3x3_cra_write),
      .avs_cra_address(avs_conv2d3x3_cra_address),
      .avs_cra_writedata(avs_conv2d3x3_cra_writedata),
      .avs_cra_byteenable(avs_conv2d3x3_cra_byteenable),
      .avs_cra_readdata(avs_conv2d3x3_cra_readdata),
      .avs_cra_readdatavalid(avs_conv2d3x3_cra_readdatavalid)
   );

   // INST conv2d3x3_id_iter_inst_0 of acl_id_iterator
   acl_id_iterator
   #(
      .WIDTH(32),
      .LOCAL_WIDTH_X(32),
      .LOCAL_WIDTH_Y(32),
      .LOCAL_WIDTH_Z(32),
      .STALL_OUT_LOOKAHEAD_COUNT(1),
      .VALID_OUT_LOOKAHEAD_COUNT(3),
      .ENABLE_TESSELLATION(0),
      .FAMILY("Cyclone V")
   )
   conv2d3x3_id_iter_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start(conv2d3x3_wg_disp_start_out),
      .valid_in(conv2d3x3_wg_disp_valid_out[0]),
      .stall_out(conv2d3x3_wg_disp_stall_in[0]),
      .stall_out_lookahead(conv2d3x3_wg_disp_stall_in_lookahead[0]),
      .stall_in(conv2d3x3_stall_out[0]),
      .valid_out(conv2d3x3_valid_in[0]),
      .group_id_in(conv2d3x3_wg_disp_group_id_out),
      .global_id_base_in(conv2d3x3_wg_disp_global_id_base_out),
      .local_size(conv2d3x3_local_size),
      .global_size(conv2d3x3_global_size),
      .local_id(conv2d3x3_local_id[0]),
      .global_id(conv2d3x3_global_id[0]),
      .group_id(conv2d3x3_group_id[0])
   );

   // INST conv2d3x3_inst_0 of conv2d3x3_top_wrapper_0
   conv2d3x3_top_wrapper_0 conv2d3x3_inst_0
   (
      .start(conv2d3x3_start_kernel_copy[0]),
      .kernel_arguments(conv2d3x3_kernel_arguments),
      .work_dim(conv2d3x3_work_dim),
      .global_offset(conv2d3x3_global_offset),
      .kernel_valid_out(conv2d3x3_valid_out[0]),
      .has_a_write_pending(conv2d3x3_pending_write[0]),
      .has_a_lsu_active(conv2d3x3_lsu_active[0]),
      .global_id(conv2d3x3_global_id[0]),
      .local_id(conv2d3x3_local_id[0]),
      .group_id(conv2d3x3_group_id[0]),
      .global_size(conv2d3x3_global_size),
      .local_size(conv2d3x3_local_size),
      .num_groups(conv2d3x3_num_groups),
      .workgroup_size(conv2d3x3_wg_size),
      .kernel_stall_out(conv2d3x3_stall_out[0]),
      .kernel_valid_in(conv2d3x3_valid_in[0]),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_memcoalesce_filter_weight_load_0
      .avm_memcoalesce_filter_weight_load_0_enable(conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_enable),
      .avm_memcoalesce_filter_weight_load_0_read(conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_read),
      .avm_memcoalesce_filter_weight_load_0_write(conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_write),
      .avm_memcoalesce_filter_weight_load_0_burstcount(conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_burstcount),
      .avm_memcoalesce_filter_weight_load_0_address(conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_address),
      .avm_memcoalesce_filter_weight_load_0_writedata(conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_writedata),
      .avm_memcoalesce_filter_weight_load_0_byteenable(conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_byteenable),
      .avm_memcoalesce_filter_weight_load_0_waitrequest(conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_waitrequest),
      .avm_memcoalesce_filter_weight_load_0_readdata(conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_readdata),
      .avm_memcoalesce_filter_weight_load_0_readdatavalid(conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_readdatavalid),
      .avm_memcoalesce_filter_weight_load_0_writeack(conv2d3x3_0_avm_memcoalesce_filter_weight_load_0_writeack),
      // AVM avm_memcoalesce_input_im_load_0
      .avm_memcoalesce_input_im_load_0_enable(conv2d3x3_0_avm_memcoalesce_input_im_load_0_enable),
      .avm_memcoalesce_input_im_load_0_read(conv2d3x3_0_avm_memcoalesce_input_im_load_0_read),
      .avm_memcoalesce_input_im_load_0_write(conv2d3x3_0_avm_memcoalesce_input_im_load_0_write),
      .avm_memcoalesce_input_im_load_0_burstcount(conv2d3x3_0_avm_memcoalesce_input_im_load_0_burstcount),
      .avm_memcoalesce_input_im_load_0_address(conv2d3x3_0_avm_memcoalesce_input_im_load_0_address),
      .avm_memcoalesce_input_im_load_0_writedata(conv2d3x3_0_avm_memcoalesce_input_im_load_0_writedata),
      .avm_memcoalesce_input_im_load_0_byteenable(conv2d3x3_0_avm_memcoalesce_input_im_load_0_byteenable),
      .avm_memcoalesce_input_im_load_0_waitrequest(conv2d3x3_0_avm_memcoalesce_input_im_load_0_waitrequest),
      .avm_memcoalesce_input_im_load_0_readdata(conv2d3x3_0_avm_memcoalesce_input_im_load_0_readdata),
      .avm_memcoalesce_input_im_load_0_readdatavalid(conv2d3x3_0_avm_memcoalesce_input_im_load_0_readdatavalid),
      .avm_memcoalesce_input_im_load_0_writeack(conv2d3x3_0_avm_memcoalesce_input_im_load_0_writeack),
      // AVM avm_unnamed_conv2d3x30
      .avm_unnamed_conv2d3x30_enable(conv2d3x3_0_avm_unnamed_conv2d3x30_enable),
      .avm_unnamed_conv2d3x30_read(conv2d3x3_0_avm_unnamed_conv2d3x30_read),
      .avm_unnamed_conv2d3x30_write(conv2d3x3_0_avm_unnamed_conv2d3x30_write),
      .avm_unnamed_conv2d3x30_burstcount(conv2d3x3_0_avm_unnamed_conv2d3x30_burstcount),
      .avm_unnamed_conv2d3x30_address(conv2d3x3_0_avm_unnamed_conv2d3x30_address),
      .avm_unnamed_conv2d3x30_writedata(conv2d3x3_0_avm_unnamed_conv2d3x30_writedata),
      .avm_unnamed_conv2d3x30_byteenable(conv2d3x3_0_avm_unnamed_conv2d3x30_byteenable),
      .avm_unnamed_conv2d3x30_waitrequest(conv2d3x3_0_avm_unnamed_conv2d3x30_waitrequest),
      .avm_unnamed_conv2d3x30_readdata(conv2d3x3_0_avm_unnamed_conv2d3x30_readdata),
      .avm_unnamed_conv2d3x30_readdatavalid(conv2d3x3_0_avm_unnamed_conv2d3x30_readdatavalid),
      .avm_unnamed_conv2d3x30_writeack(conv2d3x3_0_avm_unnamed_conv2d3x30_writeack),
      // AVM avm_unnamed_conv2d3x35
      .avm_unnamed_conv2d3x35_enable(conv2d3x3_0_avm_unnamed_conv2d3x35_enable),
      .avm_unnamed_conv2d3x35_read(conv2d3x3_0_avm_unnamed_conv2d3x35_read),
      .avm_unnamed_conv2d3x35_write(conv2d3x3_0_avm_unnamed_conv2d3x35_write),
      .avm_unnamed_conv2d3x35_burstcount(conv2d3x3_0_avm_unnamed_conv2d3x35_burstcount),
      .avm_unnamed_conv2d3x35_address(conv2d3x3_0_avm_unnamed_conv2d3x35_address),
      .avm_unnamed_conv2d3x35_writedata(conv2d3x3_0_avm_unnamed_conv2d3x35_writedata),
      .avm_unnamed_conv2d3x35_byteenable(conv2d3x3_0_avm_unnamed_conv2d3x35_byteenable),
      .avm_unnamed_conv2d3x35_waitrequest(conv2d3x3_0_avm_unnamed_conv2d3x35_waitrequest),
      .avm_unnamed_conv2d3x35_readdata(conv2d3x3_0_avm_unnamed_conv2d3x35_readdata),
      .avm_unnamed_conv2d3x35_readdatavalid(conv2d3x3_0_avm_unnamed_conv2d3x35_readdatavalid),
      .avm_unnamed_conv2d3x35_writeack(conv2d3x3_0_avm_unnamed_conv2d3x35_writeack)
   );

   // INST conv2d3x3_start_elem_inst_0 of acl_start_signal_chain_element
   acl_start_signal_chain_element
   #(
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0)
   )
   conv2d3x3_start_elem_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start_in(conv2d3x3_start_chain[0]),
      .start_kernel(conv2d3x3_start_kernel_copy[0]),
      .start_finish_detector(conv2d3x3_start_task_fd[0]),
      .start_finish_chain_element(conv2d3x3_start_finish_element[0]),
      .start_chain()
   );

endmodule

/////////////////////////////////////////////////////////////////
// MODULE fc_std_ic_partition_wrapper
/////////////////////////////////////////////////////////////////
module fc_std_ic_partition_wrapper
(
   input logic clock,
   input logic clock2x,
   input logic resetn,
   output logic cra_irq_fc,
   // AVS avs_fc_cra
   input logic avs_fc_cra_enable,
   input logic avs_fc_cra_read,
   input logic avs_fc_cra_write,
   input logic [4:0] avs_fc_cra_address,
   input logic [63:0] avs_fc_cra_writedata,
   input logic [7:0] avs_fc_cra_byteenable,
   output logic [63:0] avs_fc_cra_readdata,
   output logic avs_fc_cra_readdatavalid,
   // AVM fc_0_avm_unnamed_fc0
   output logic fc_0_avm_unnamed_fc0_enable,
   output logic fc_0_avm_unnamed_fc0_read,
   output logic fc_0_avm_unnamed_fc0_write,
   output logic [4:0] fc_0_avm_unnamed_fc0_burstcount,
   output logic [30:0] fc_0_avm_unnamed_fc0_address,
   output logic [255:0] fc_0_avm_unnamed_fc0_writedata,
   output logic [31:0] fc_0_avm_unnamed_fc0_byteenable,
   input logic fc_0_avm_unnamed_fc0_waitrequest,
   input logic [255:0] fc_0_avm_unnamed_fc0_readdata,
   input logic fc_0_avm_unnamed_fc0_readdatavalid,
   input logic fc_0_avm_unnamed_fc0_writeack,
   // AVM fc_0_avm_unnamed_fc2
   output logic fc_0_avm_unnamed_fc2_enable,
   output logic fc_0_avm_unnamed_fc2_read,
   output logic fc_0_avm_unnamed_fc2_write,
   output logic [4:0] fc_0_avm_unnamed_fc2_burstcount,
   output logic [30:0] fc_0_avm_unnamed_fc2_address,
   output logic [255:0] fc_0_avm_unnamed_fc2_writedata,
   output logic [31:0] fc_0_avm_unnamed_fc2_byteenable,
   input logic fc_0_avm_unnamed_fc2_waitrequest,
   input logic [255:0] fc_0_avm_unnamed_fc2_readdata,
   input logic fc_0_avm_unnamed_fc2_readdatavalid,
   input logic fc_0_avm_unnamed_fc2_writeack,
   // AVM fc_0_avm_unnamed_fc3
   output logic fc_0_avm_unnamed_fc3_enable,
   output logic fc_0_avm_unnamed_fc3_read,
   output logic fc_0_avm_unnamed_fc3_write,
   output logic [4:0] fc_0_avm_unnamed_fc3_burstcount,
   output logic [30:0] fc_0_avm_unnamed_fc3_address,
   output logic [255:0] fc_0_avm_unnamed_fc3_writedata,
   output logic [31:0] fc_0_avm_unnamed_fc3_byteenable,
   input logic fc_0_avm_unnamed_fc3_waitrequest,
   input logic [255:0] fc_0_avm_unnamed_fc3_readdata,
   input logic fc_0_avm_unnamed_fc3_readdatavalid,
   input logic fc_0_avm_unnamed_fc3_writeack,
   // AVM fc_0_avm_unnamed_fc5
   output logic fc_0_avm_unnamed_fc5_enable,
   output logic fc_0_avm_unnamed_fc5_read,
   output logic fc_0_avm_unnamed_fc5_write,
   output logic [4:0] fc_0_avm_unnamed_fc5_burstcount,
   output logic [30:0] fc_0_avm_unnamed_fc5_address,
   output logic [255:0] fc_0_avm_unnamed_fc5_writedata,
   output logic [31:0] fc_0_avm_unnamed_fc5_byteenable,
   input logic fc_0_avm_unnamed_fc5_waitrequest,
   input logic [255:0] fc_0_avm_unnamed_fc5_readdata,
   input logic fc_0_avm_unnamed_fc5_readdatavalid,
   input logic fc_0_avm_unnamed_fc5_writeack
);
   logic fc_start;
   logic [0:0] fc_start_chain;
   logic [0:0] fc_start_kernel_copy;
   logic [0:0] fc_start_task_fd;
   logic [0:0] fc_start_finish_element;
   logic fc_finish;
   logic [0:0] fc_finish_kernel_copy;
   logic [0:0] fc_finish_chain;
   logic [31:0] fc_global_size [2:0];
   logic [31:0] fc_num_groups [2:0];
   logic [31:0] fc_local_size [2:0];
   logic [31:0] fc_global_offset [2:0];
   logic [31:0] fc_work_dim;
   logic [31:0] fc_wg_size;
   logic [0:0] fc_wg_disp_stall_in;
   logic [0:0] fc_wg_disp_stall_in_lookahead;
   logic [0:0] fc_wg_disp_valid_out;
   logic fc_wg_disp_start_out;
   logic [31:0] fc_wg_disp_group_id_out [2:0];
   logic [31:0] fc_wg_disp_global_id_base_out [2:0];
   logic fc_wg_disp_dispatched_all_groups;
   logic [31:0] fc_global_id [1][2:0];
   logic [31:0] fc_local_id [1][2:0];
   logic [31:0] fc_group_id [1][2:0];
   logic [0:0] fc_pending_write;
   logic [0:0] fc_lsu_active;
   logic [0:0] fc_valid_in;
   logic [0:0] fc_valid_out;
   logic [0:0] fc_stall_in;
   logic [0:0] fc_stall_out;
   logic fc_cra_pending_write;
   logic fc_cra_lsu_active;
   logic fc_cra_valid_in;
   logic [319:0] fc_kernel_arguments;

   assign fc_start_chain[0] = fc_start;
   assign fc_finish_chain[0] = 1'b1;
   assign fc_cra_pending_write = |fc_pending_write;
   assign fc_cra_lsu_active = |fc_lsu_active;
   assign fc_cra_valid_in = |fc_valid_in;
   assign fc_stall_in = 0;
   // INST fc_workgroup_dispatcher of acl_work_group_dispatcher
   acl_work_group_dispatcher
   #(
      .WIDTH(32),
      .NUM_COPIES(1),
      .RUN_FOREVER(0),
      .FAMILY("Cyclone V")
   )
   fc_workgroup_dispatcher
   (
      .clock(clock),
      .resetn(resetn),
      .start(fc_start),
      .num_groups(fc_num_groups),
      .local_size(fc_local_size),
      .stall_in(fc_wg_disp_stall_in),
      .stall_in_lookahead(fc_wg_disp_stall_in_lookahead),
      .valid_out(fc_wg_disp_valid_out),
      .group_id_out(fc_wg_disp_group_id_out),
      .global_id_base_out(fc_wg_disp_global_id_base_out),
      .start_out(fc_wg_disp_start_out),
      .dispatched_all_groups(fc_wg_disp_dispatched_all_groups)
   );

   // INST fc_finish_detector of acl_kernel_finish_detector
   acl_kernel_finish_detector
   #(
      .NUM_COPIES(1),
      .WG_SIZE_W(32),
      .GLOBAL_ID_W(32),
      .TESSELLATION_SIZE(0),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0)
   )
   fc_finish_detector
   (
      .clock(clock),
      .resetn(resetn),
      .start(fc_start),
      .wg_size(fc_wg_size),
      .wg_dispatch_valid_out(fc_wg_disp_valid_out),
      .wg_dispatch_stall_in(fc_wg_disp_stall_in),
      .dispatched_all_groups(fc_wg_disp_dispatched_all_groups),
      .kernel_copy_valid_out(fc_valid_out),
      .kernel_copy_stall_in(fc_stall_in),
      .pending_writes(fc_cra_pending_write),
      .finish(fc_finish)
   );

   // INST fc_cra_slave_inst of fc_function_cra_slave
   fc_function_cra_slave fc_cra_slave_inst
   (
      .clock(clock),
      .resetn(resetn),
      .start(fc_start),
      .finish(fc_finish),
      .global_offset_0(fc_global_offset[0]),
      .global_offset_1(fc_global_offset[1]),
      .global_offset_2(fc_global_offset[2]),
      .work_dim(fc_work_dim),
      .has_a_lsu_active(fc_cra_lsu_active),
      .has_a_write_pending(fc_cra_pending_write),
      .valid_in(fc_cra_valid_in),
      .global_size_0(fc_global_size[0]),
      .global_size_1(fc_global_size[1]),
      .global_size_2(fc_global_size[2]),
      .num_groups_0(fc_num_groups[0]),
      .num_groups_1(fc_num_groups[1]),
      .num_groups_2(fc_num_groups[2]),
      .local_size_0(fc_local_size[0]),
      .local_size_1(fc_local_size[1]),
      .local_size_2(fc_local_size[2]),
      .workgroup_size(fc_wg_size),
      .kernel_arguments(fc_kernel_arguments),
      .cra_irq(cra_irq_fc),
      // AVS avs_cra
      .avs_cra_enable(avs_fc_cra_enable),
      .avs_cra_read(avs_fc_cra_read),
      .avs_cra_write(avs_fc_cra_write),
      .avs_cra_address(avs_fc_cra_address),
      .avs_cra_writedata(avs_fc_cra_writedata),
      .avs_cra_byteenable(avs_fc_cra_byteenable),
      .avs_cra_readdata(avs_fc_cra_readdata),
      .avs_cra_readdatavalid(avs_fc_cra_readdatavalid)
   );

   // INST fc_id_iter_inst_0 of acl_id_iterator
   acl_id_iterator
   #(
      .WIDTH(32),
      .LOCAL_WIDTH_X(32),
      .LOCAL_WIDTH_Y(32),
      .LOCAL_WIDTH_Z(32),
      .STALL_OUT_LOOKAHEAD_COUNT(1),
      .VALID_OUT_LOOKAHEAD_COUNT(3),
      .ENABLE_TESSELLATION(0),
      .FAMILY("Cyclone V")
   )
   fc_id_iter_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start(fc_wg_disp_start_out),
      .valid_in(fc_wg_disp_valid_out[0]),
      .stall_out(fc_wg_disp_stall_in[0]),
      .stall_out_lookahead(fc_wg_disp_stall_in_lookahead[0]),
      .stall_in(fc_stall_out[0]),
      .valid_out(fc_valid_in[0]),
      .group_id_in(fc_wg_disp_group_id_out),
      .global_id_base_in(fc_wg_disp_global_id_base_out),
      .local_size(fc_local_size),
      .global_size(fc_global_size),
      .local_id(fc_local_id[0]),
      .global_id(fc_global_id[0]),
      .group_id(fc_group_id[0])
   );

   // INST fc_inst_0 of fc_top_wrapper_0
   fc_top_wrapper_0 fc_inst_0
   (
      .start(fc_start_kernel_copy[0]),
      .kernel_arguments(fc_kernel_arguments),
      .work_dim(fc_work_dim),
      .global_offset(fc_global_offset),
      .kernel_valid_out(fc_valid_out[0]),
      .has_a_write_pending(fc_pending_write[0]),
      .has_a_lsu_active(fc_lsu_active[0]),
      .global_id(fc_global_id[0]),
      .local_id(fc_local_id[0]),
      .group_id(fc_group_id[0]),
      .global_size(fc_global_size),
      .local_size(fc_local_size),
      .num_groups(fc_num_groups),
      .workgroup_size(fc_wg_size),
      .kernel_stall_out(fc_stall_out[0]),
      .kernel_valid_in(fc_valid_in[0]),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_unnamed_fc0
      .avm_unnamed_fc0_enable(fc_0_avm_unnamed_fc0_enable),
      .avm_unnamed_fc0_read(fc_0_avm_unnamed_fc0_read),
      .avm_unnamed_fc0_write(fc_0_avm_unnamed_fc0_write),
      .avm_unnamed_fc0_burstcount(fc_0_avm_unnamed_fc0_burstcount),
      .avm_unnamed_fc0_address(fc_0_avm_unnamed_fc0_address),
      .avm_unnamed_fc0_writedata(fc_0_avm_unnamed_fc0_writedata),
      .avm_unnamed_fc0_byteenable(fc_0_avm_unnamed_fc0_byteenable),
      .avm_unnamed_fc0_waitrequest(fc_0_avm_unnamed_fc0_waitrequest),
      .avm_unnamed_fc0_readdata(fc_0_avm_unnamed_fc0_readdata),
      .avm_unnamed_fc0_readdatavalid(fc_0_avm_unnamed_fc0_readdatavalid),
      .avm_unnamed_fc0_writeack(fc_0_avm_unnamed_fc0_writeack),
      // AVM avm_unnamed_fc2
      .avm_unnamed_fc2_enable(fc_0_avm_unnamed_fc2_enable),
      .avm_unnamed_fc2_read(fc_0_avm_unnamed_fc2_read),
      .avm_unnamed_fc2_write(fc_0_avm_unnamed_fc2_write),
      .avm_unnamed_fc2_burstcount(fc_0_avm_unnamed_fc2_burstcount),
      .avm_unnamed_fc2_address(fc_0_avm_unnamed_fc2_address),
      .avm_unnamed_fc2_writedata(fc_0_avm_unnamed_fc2_writedata),
      .avm_unnamed_fc2_byteenable(fc_0_avm_unnamed_fc2_byteenable),
      .avm_unnamed_fc2_waitrequest(fc_0_avm_unnamed_fc2_waitrequest),
      .avm_unnamed_fc2_readdata(fc_0_avm_unnamed_fc2_readdata),
      .avm_unnamed_fc2_readdatavalid(fc_0_avm_unnamed_fc2_readdatavalid),
      .avm_unnamed_fc2_writeack(fc_0_avm_unnamed_fc2_writeack),
      // AVM avm_unnamed_fc3
      .avm_unnamed_fc3_enable(fc_0_avm_unnamed_fc3_enable),
      .avm_unnamed_fc3_read(fc_0_avm_unnamed_fc3_read),
      .avm_unnamed_fc3_write(fc_0_avm_unnamed_fc3_write),
      .avm_unnamed_fc3_burstcount(fc_0_avm_unnamed_fc3_burstcount),
      .avm_unnamed_fc3_address(fc_0_avm_unnamed_fc3_address),
      .avm_unnamed_fc3_writedata(fc_0_avm_unnamed_fc3_writedata),
      .avm_unnamed_fc3_byteenable(fc_0_avm_unnamed_fc3_byteenable),
      .avm_unnamed_fc3_waitrequest(fc_0_avm_unnamed_fc3_waitrequest),
      .avm_unnamed_fc3_readdata(fc_0_avm_unnamed_fc3_readdata),
      .avm_unnamed_fc3_readdatavalid(fc_0_avm_unnamed_fc3_readdatavalid),
      .avm_unnamed_fc3_writeack(fc_0_avm_unnamed_fc3_writeack),
      // AVM avm_unnamed_fc5
      .avm_unnamed_fc5_enable(fc_0_avm_unnamed_fc5_enable),
      .avm_unnamed_fc5_read(fc_0_avm_unnamed_fc5_read),
      .avm_unnamed_fc5_write(fc_0_avm_unnamed_fc5_write),
      .avm_unnamed_fc5_burstcount(fc_0_avm_unnamed_fc5_burstcount),
      .avm_unnamed_fc5_address(fc_0_avm_unnamed_fc5_address),
      .avm_unnamed_fc5_writedata(fc_0_avm_unnamed_fc5_writedata),
      .avm_unnamed_fc5_byteenable(fc_0_avm_unnamed_fc5_byteenable),
      .avm_unnamed_fc5_waitrequest(fc_0_avm_unnamed_fc5_waitrequest),
      .avm_unnamed_fc5_readdata(fc_0_avm_unnamed_fc5_readdata),
      .avm_unnamed_fc5_readdatavalid(fc_0_avm_unnamed_fc5_readdatavalid),
      .avm_unnamed_fc5_writeack(fc_0_avm_unnamed_fc5_writeack)
   );

   // INST fc_start_elem_inst_0 of acl_start_signal_chain_element
   acl_start_signal_chain_element
   #(
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0)
   )
   fc_start_elem_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start_in(fc_start_chain[0]),
      .start_kernel(fc_start_kernel_copy[0]),
      .start_finish_detector(fc_start_task_fd[0]),
      .start_finish_chain_element(fc_start_finish_element[0]),
      .start_chain()
   );

endmodule

/////////////////////////////////////////////////////////////////
// MODULE maxpool2d_std_ic_partition_wrapper
/////////////////////////////////////////////////////////////////
module maxpool2d_std_ic_partition_wrapper
(
   input logic clock,
   input logic clock2x,
   input logic resetn,
   output logic cra_irq_maxpool2d,
   // AVS avs_maxpool2d_cra
   input logic avs_maxpool2d_cra_enable,
   input logic avs_maxpool2d_cra_read,
   input logic avs_maxpool2d_cra_write,
   input logic [3:0] avs_maxpool2d_cra_address,
   input logic [63:0] avs_maxpool2d_cra_writedata,
   input logic [7:0] avs_maxpool2d_cra_byteenable,
   output logic [63:0] avs_maxpool2d_cra_readdata,
   output logic avs_maxpool2d_cra_readdatavalid,
   // AVM maxpool2d_0_avm_memcoalesce_input_im_load_0
   output logic maxpool2d_0_avm_memcoalesce_input_im_load_0_enable,
   output logic maxpool2d_0_avm_memcoalesce_input_im_load_0_read,
   output logic maxpool2d_0_avm_memcoalesce_input_im_load_0_write,
   output logic [4:0] maxpool2d_0_avm_memcoalesce_input_im_load_0_burstcount,
   output logic [30:0] maxpool2d_0_avm_memcoalesce_input_im_load_0_address,
   output logic [255:0] maxpool2d_0_avm_memcoalesce_input_im_load_0_writedata,
   output logic [31:0] maxpool2d_0_avm_memcoalesce_input_im_load_0_byteenable,
   input logic maxpool2d_0_avm_memcoalesce_input_im_load_0_waitrequest,
   input logic [255:0] maxpool2d_0_avm_memcoalesce_input_im_load_0_readdata,
   input logic maxpool2d_0_avm_memcoalesce_input_im_load_0_readdatavalid,
   input logic maxpool2d_0_avm_memcoalesce_input_im_load_0_writeack,
   // AVM maxpool2d_0_avm_unnamed_maxpool2d1
   output logic maxpool2d_0_avm_unnamed_maxpool2d1_enable,
   output logic maxpool2d_0_avm_unnamed_maxpool2d1_read,
   output logic maxpool2d_0_avm_unnamed_maxpool2d1_write,
   output logic [4:0] maxpool2d_0_avm_unnamed_maxpool2d1_burstcount,
   output logic [30:0] maxpool2d_0_avm_unnamed_maxpool2d1_address,
   output logic [255:0] maxpool2d_0_avm_unnamed_maxpool2d1_writedata,
   output logic [31:0] maxpool2d_0_avm_unnamed_maxpool2d1_byteenable,
   input logic maxpool2d_0_avm_unnamed_maxpool2d1_waitrequest,
   input logic [255:0] maxpool2d_0_avm_unnamed_maxpool2d1_readdata,
   input logic maxpool2d_0_avm_unnamed_maxpool2d1_readdatavalid,
   input logic maxpool2d_0_avm_unnamed_maxpool2d1_writeack
);
   logic maxpool2d_start;
   logic [0:0] maxpool2d_start_chain;
   logic [0:0] maxpool2d_start_kernel_copy;
   logic [0:0] maxpool2d_start_task_fd;
   logic [0:0] maxpool2d_start_finish_element;
   logic maxpool2d_finish;
   logic [0:0] maxpool2d_finish_kernel_copy;
   logic [0:0] maxpool2d_finish_chain;
   logic [31:0] maxpool2d_global_size [2:0];
   logic [31:0] maxpool2d_num_groups [2:0];
   logic [31:0] maxpool2d_local_size [2:0];
   logic [31:0] maxpool2d_global_offset [2:0];
   logic [31:0] maxpool2d_work_dim;
   logic [31:0] maxpool2d_wg_size;
   logic [0:0] maxpool2d_wg_disp_stall_in;
   logic [0:0] maxpool2d_wg_disp_stall_in_lookahead;
   logic [0:0] maxpool2d_wg_disp_valid_out;
   logic maxpool2d_wg_disp_start_out;
   logic [31:0] maxpool2d_wg_disp_group_id_out [2:0];
   logic [31:0] maxpool2d_wg_disp_global_id_base_out [2:0];
   logic maxpool2d_wg_disp_dispatched_all_groups;
   logic [31:0] maxpool2d_global_id [1][2:0];
   logic [31:0] maxpool2d_local_id [1][2:0];
   logic [31:0] maxpool2d_group_id [1][2:0];
   logic [0:0] maxpool2d_pending_write;
   logic [0:0] maxpool2d_lsu_active;
   logic [0:0] maxpool2d_valid_in;
   logic [0:0] maxpool2d_valid_out;
   logic [0:0] maxpool2d_stall_in;
   logic [0:0] maxpool2d_stall_out;
   logic maxpool2d_cra_pending_write;
   logic maxpool2d_cra_lsu_active;
   logic maxpool2d_cra_valid_in;
   logic [191:0] maxpool2d_kernel_arguments;

   assign maxpool2d_start_chain[0] = maxpool2d_start;
   assign maxpool2d_finish_chain[0] = 1'b1;
   assign maxpool2d_cra_pending_write = |maxpool2d_pending_write;
   assign maxpool2d_cra_lsu_active = |maxpool2d_lsu_active;
   assign maxpool2d_cra_valid_in = |maxpool2d_valid_in;
   assign maxpool2d_stall_in = 0;
   // INST maxpool2d_workgroup_dispatcher of acl_work_group_dispatcher
   acl_work_group_dispatcher
   #(
      .WIDTH(32),
      .NUM_COPIES(1),
      .RUN_FOREVER(0),
      .FAMILY("Cyclone V")
   )
   maxpool2d_workgroup_dispatcher
   (
      .clock(clock),
      .resetn(resetn),
      .start(maxpool2d_start),
      .num_groups(maxpool2d_num_groups),
      .local_size(maxpool2d_local_size),
      .stall_in(maxpool2d_wg_disp_stall_in),
      .stall_in_lookahead(maxpool2d_wg_disp_stall_in_lookahead),
      .valid_out(maxpool2d_wg_disp_valid_out),
      .group_id_out(maxpool2d_wg_disp_group_id_out),
      .global_id_base_out(maxpool2d_wg_disp_global_id_base_out),
      .start_out(maxpool2d_wg_disp_start_out),
      .dispatched_all_groups(maxpool2d_wg_disp_dispatched_all_groups)
   );

   // INST maxpool2d_finish_detector of acl_kernel_finish_detector
   acl_kernel_finish_detector
   #(
      .NUM_COPIES(1),
      .WG_SIZE_W(32),
      .GLOBAL_ID_W(32),
      .TESSELLATION_SIZE(0),
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0),
      .HYPER_PIPELINE(0)
   )
   maxpool2d_finish_detector
   (
      .clock(clock),
      .resetn(resetn),
      .start(maxpool2d_start),
      .wg_size(maxpool2d_wg_size),
      .wg_dispatch_valid_out(maxpool2d_wg_disp_valid_out),
      .wg_dispatch_stall_in(maxpool2d_wg_disp_stall_in),
      .dispatched_all_groups(maxpool2d_wg_disp_dispatched_all_groups),
      .kernel_copy_valid_out(maxpool2d_valid_out),
      .kernel_copy_stall_in(maxpool2d_stall_in),
      .pending_writes(maxpool2d_cra_pending_write),
      .finish(maxpool2d_finish)
   );

   // INST maxpool2d_cra_slave_inst of maxpool2d_function_cra_slave
   maxpool2d_function_cra_slave maxpool2d_cra_slave_inst
   (
      .clock(clock),
      .resetn(resetn),
      .start(maxpool2d_start),
      .finish(maxpool2d_finish),
      .global_offset_0(maxpool2d_global_offset[0]),
      .global_offset_1(maxpool2d_global_offset[1]),
      .global_offset_2(maxpool2d_global_offset[2]),
      .work_dim(maxpool2d_work_dim),
      .has_a_lsu_active(maxpool2d_cra_lsu_active),
      .has_a_write_pending(maxpool2d_cra_pending_write),
      .valid_in(maxpool2d_cra_valid_in),
      .global_size_0(maxpool2d_global_size[0]),
      .global_size_1(maxpool2d_global_size[1]),
      .global_size_2(maxpool2d_global_size[2]),
      .num_groups_0(maxpool2d_num_groups[0]),
      .num_groups_1(maxpool2d_num_groups[1]),
      .num_groups_2(maxpool2d_num_groups[2]),
      .local_size_0(maxpool2d_local_size[0]),
      .local_size_1(maxpool2d_local_size[1]),
      .local_size_2(maxpool2d_local_size[2]),
      .workgroup_size(maxpool2d_wg_size),
      .kernel_arguments(maxpool2d_kernel_arguments),
      .cra_irq(cra_irq_maxpool2d),
      // AVS avs_cra
      .avs_cra_enable(avs_maxpool2d_cra_enable),
      .avs_cra_read(avs_maxpool2d_cra_read),
      .avs_cra_write(avs_maxpool2d_cra_write),
      .avs_cra_address(avs_maxpool2d_cra_address),
      .avs_cra_writedata(avs_maxpool2d_cra_writedata),
      .avs_cra_byteenable(avs_maxpool2d_cra_byteenable),
      .avs_cra_readdata(avs_maxpool2d_cra_readdata),
      .avs_cra_readdatavalid(avs_maxpool2d_cra_readdatavalid)
   );

   // INST maxpool2d_id_iter_inst_0 of acl_id_iterator
   acl_id_iterator
   #(
      .WIDTH(32),
      .LOCAL_WIDTH_X(32),
      .LOCAL_WIDTH_Y(32),
      .LOCAL_WIDTH_Z(32),
      .STALL_OUT_LOOKAHEAD_COUNT(1),
      .VALID_OUT_LOOKAHEAD_COUNT(3),
      .ENABLE_TESSELLATION(0),
      .FAMILY("Cyclone V")
   )
   maxpool2d_id_iter_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start(maxpool2d_wg_disp_start_out),
      .valid_in(maxpool2d_wg_disp_valid_out[0]),
      .stall_out(maxpool2d_wg_disp_stall_in[0]),
      .stall_out_lookahead(maxpool2d_wg_disp_stall_in_lookahead[0]),
      .stall_in(maxpool2d_stall_out[0]),
      .valid_out(maxpool2d_valid_in[0]),
      .group_id_in(maxpool2d_wg_disp_group_id_out),
      .global_id_base_in(maxpool2d_wg_disp_global_id_base_out),
      .local_size(maxpool2d_local_size),
      .global_size(maxpool2d_global_size),
      .local_id(maxpool2d_local_id[0]),
      .global_id(maxpool2d_global_id[0]),
      .group_id(maxpool2d_group_id[0])
   );

   // INST maxpool2d_inst_0 of maxpool2d_top_wrapper_0
   maxpool2d_top_wrapper_0 maxpool2d_inst_0
   (
      .start(maxpool2d_start_kernel_copy[0]),
      .kernel_arguments(maxpool2d_kernel_arguments),
      .work_dim(maxpool2d_work_dim),
      .global_offset(maxpool2d_global_offset),
      .kernel_valid_out(maxpool2d_valid_out[0]),
      .has_a_write_pending(maxpool2d_pending_write[0]),
      .has_a_lsu_active(maxpool2d_lsu_active[0]),
      .global_id(maxpool2d_global_id[0]),
      .local_id(maxpool2d_local_id[0]),
      .group_id(maxpool2d_group_id[0]),
      .global_size(maxpool2d_global_size),
      .local_size(maxpool2d_local_size),
      .num_groups(maxpool2d_num_groups),
      .workgroup_size(maxpool2d_wg_size),
      .kernel_stall_out(maxpool2d_stall_out[0]),
      .kernel_valid_in(maxpool2d_valid_in[0]),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_memcoalesce_input_im_load_0
      .avm_memcoalesce_input_im_load_0_enable(maxpool2d_0_avm_memcoalesce_input_im_load_0_enable),
      .avm_memcoalesce_input_im_load_0_read(maxpool2d_0_avm_memcoalesce_input_im_load_0_read),
      .avm_memcoalesce_input_im_load_0_write(maxpool2d_0_avm_memcoalesce_input_im_load_0_write),
      .avm_memcoalesce_input_im_load_0_burstcount(maxpool2d_0_avm_memcoalesce_input_im_load_0_burstcount),
      .avm_memcoalesce_input_im_load_0_address(maxpool2d_0_avm_memcoalesce_input_im_load_0_address),
      .avm_memcoalesce_input_im_load_0_writedata(maxpool2d_0_avm_memcoalesce_input_im_load_0_writedata),
      .avm_memcoalesce_input_im_load_0_byteenable(maxpool2d_0_avm_memcoalesce_input_im_load_0_byteenable),
      .avm_memcoalesce_input_im_load_0_waitrequest(maxpool2d_0_avm_memcoalesce_input_im_load_0_waitrequest),
      .avm_memcoalesce_input_im_load_0_readdata(maxpool2d_0_avm_memcoalesce_input_im_load_0_readdata),
      .avm_memcoalesce_input_im_load_0_readdatavalid(maxpool2d_0_avm_memcoalesce_input_im_load_0_readdatavalid),
      .avm_memcoalesce_input_im_load_0_writeack(maxpool2d_0_avm_memcoalesce_input_im_load_0_writeack),
      // AVM avm_unnamed_maxpool2d1
      .avm_unnamed_maxpool2d1_enable(maxpool2d_0_avm_unnamed_maxpool2d1_enable),
      .avm_unnamed_maxpool2d1_read(maxpool2d_0_avm_unnamed_maxpool2d1_read),
      .avm_unnamed_maxpool2d1_write(maxpool2d_0_avm_unnamed_maxpool2d1_write),
      .avm_unnamed_maxpool2d1_burstcount(maxpool2d_0_avm_unnamed_maxpool2d1_burstcount),
      .avm_unnamed_maxpool2d1_address(maxpool2d_0_avm_unnamed_maxpool2d1_address),
      .avm_unnamed_maxpool2d1_writedata(maxpool2d_0_avm_unnamed_maxpool2d1_writedata),
      .avm_unnamed_maxpool2d1_byteenable(maxpool2d_0_avm_unnamed_maxpool2d1_byteenable),
      .avm_unnamed_maxpool2d1_waitrequest(maxpool2d_0_avm_unnamed_maxpool2d1_waitrequest),
      .avm_unnamed_maxpool2d1_readdata(maxpool2d_0_avm_unnamed_maxpool2d1_readdata),
      .avm_unnamed_maxpool2d1_readdatavalid(maxpool2d_0_avm_unnamed_maxpool2d1_readdatavalid),
      .avm_unnamed_maxpool2d1_writeack(maxpool2d_0_avm_unnamed_maxpool2d1_writeack)
   );

   // INST maxpool2d_start_elem_inst_0 of acl_start_signal_chain_element
   acl_start_signal_chain_element
   #(
      .ASYNC_RESET(1),
      .SYNCHRONIZE_RESET(0)
   )
   maxpool2d_start_elem_inst_0
   (
      .clock(clock),
      .resetn(resetn),
      .start_in(maxpool2d_start_chain[0]),
      .start_kernel(maxpool2d_start_kernel_copy[0]),
      .start_finish_detector(maxpool2d_start_task_fd[0]),
      .start_finish_chain_element(maxpool2d_start_finish_element[0]),
      .start_chain()
   );

endmodule

/////////////////////////////////////////////////////////////////
// MODULE avgpool2d_top_wrapper_0
/////////////////////////////////////////////////////////////////
module avgpool2d_top_wrapper_0
(
   input logic start,
   input logic [191:0] kernel_arguments,
   input logic [31:0] work_dim,
   input logic [31:0] global_offset [2:0],
   output logic kernel_valid_out,
   output logic has_a_write_pending,
   output logic has_a_lsu_active,
   input logic [31:0] global_id [2:0],
   input logic [31:0] local_id [2:0],
   input logic [31:0] group_id [2:0],
   input logic [31:0] global_size [2:0],
   input logic [31:0] local_size [2:0],
   input logic [31:0] num_groups [2:0],
   input logic [31:0] workgroup_size,
   output logic kernel_stall_out,
   input logic kernel_valid_in,
   input logic clock,
   input logic resetn,
   input logic clock2x,
   // AVM avm_unnamed_avgpool2d0
   output logic avm_unnamed_avgpool2d0_enable,
   output logic avm_unnamed_avgpool2d0_read,
   output logic avm_unnamed_avgpool2d0_write,
   output logic [4:0] avm_unnamed_avgpool2d0_burstcount,
   output logic [30:0] avm_unnamed_avgpool2d0_address,
   output logic [255:0] avm_unnamed_avgpool2d0_writedata,
   output logic [31:0] avm_unnamed_avgpool2d0_byteenable,
   input logic avm_unnamed_avgpool2d0_waitrequest,
   input logic [255:0] avm_unnamed_avgpool2d0_readdata,
   input logic avm_unnamed_avgpool2d0_readdatavalid,
   input logic avm_unnamed_avgpool2d0_writeack,
   // AVM avm_unnamed_avgpool2d1
   output logic avm_unnamed_avgpool2d1_enable,
   output logic avm_unnamed_avgpool2d1_read,
   output logic avm_unnamed_avgpool2d1_write,
   output logic [4:0] avm_unnamed_avgpool2d1_burstcount,
   output logic [30:0] avm_unnamed_avgpool2d1_address,
   output logic [255:0] avm_unnamed_avgpool2d1_writedata,
   output logic [31:0] avm_unnamed_avgpool2d1_byteenable,
   input logic avm_unnamed_avgpool2d1_waitrequest,
   input logic [255:0] avm_unnamed_avgpool2d1_readdata,
   input logic avm_unnamed_avgpool2d1_readdatavalid,
   input logic avm_unnamed_avgpool2d1_writeack
);
   logic lmem_invalid_single_bit;

   // INST kernel of avgpool2d_function_wrapper
   avgpool2d_function_wrapper kernel
   (
      .local_router_hang(lmem_invalid_single_bit),
      .start(start),
      .kernel_arguments(kernel_arguments),
      .work_dim(work_dim),
      .global_offset_0(global_offset[0]),
      .global_offset_1(global_offset[1]),
      .global_offset_2(global_offset[2]),
      .kernel_valid_out(kernel_valid_out),
      .has_a_write_pending(has_a_write_pending),
      .has_a_lsu_active(has_a_lsu_active),
      .global_id_0(global_id[0]),
      .global_id_1(global_id[1]),
      .global_id_2(global_id[2]),
      .local_id_0(local_id[0]),
      .local_id_1(local_id[1]),
      .local_id_2(local_id[2]),
      .group_id_0(group_id[0]),
      .group_id_1(group_id[1]),
      .group_id_2(group_id[2]),
      .global_size_0(global_size[0]),
      .global_size_1(global_size[1]),
      .global_size_2(global_size[2]),
      .local_size_0(local_size[0]),
      .local_size_1(local_size[1]),
      .local_size_2(local_size[2]),
      .num_groups_0(num_groups[0]),
      .num_groups_1(num_groups[1]),
      .num_groups_2(num_groups[2]),
      .workgroup_size(workgroup_size),
      .kernel_stall_out(kernel_stall_out),
      .kernel_valid_in(kernel_valid_in),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_unnamed_avgpool2d0
      .avm_unnamed_avgpool2d0_enable(avm_unnamed_avgpool2d0_enable),
      .avm_unnamed_avgpool2d0_read(avm_unnamed_avgpool2d0_read),
      .avm_unnamed_avgpool2d0_write(avm_unnamed_avgpool2d0_write),
      .avm_unnamed_avgpool2d0_burstcount(avm_unnamed_avgpool2d0_burstcount),
      .avm_unnamed_avgpool2d0_address(avm_unnamed_avgpool2d0_address),
      .avm_unnamed_avgpool2d0_writedata(avm_unnamed_avgpool2d0_writedata),
      .avm_unnamed_avgpool2d0_byteenable(avm_unnamed_avgpool2d0_byteenable),
      .avm_unnamed_avgpool2d0_waitrequest(avm_unnamed_avgpool2d0_waitrequest),
      .avm_unnamed_avgpool2d0_readdata(avm_unnamed_avgpool2d0_readdata),
      .avm_unnamed_avgpool2d0_readdatavalid(avm_unnamed_avgpool2d0_readdatavalid),
      .avm_unnamed_avgpool2d0_writeack(avm_unnamed_avgpool2d0_writeack),
      // AVM avm_unnamed_avgpool2d1
      .avm_unnamed_avgpool2d1_enable(avm_unnamed_avgpool2d1_enable),
      .avm_unnamed_avgpool2d1_read(avm_unnamed_avgpool2d1_read),
      .avm_unnamed_avgpool2d1_write(avm_unnamed_avgpool2d1_write),
      .avm_unnamed_avgpool2d1_burstcount(avm_unnamed_avgpool2d1_burstcount),
      .avm_unnamed_avgpool2d1_address(avm_unnamed_avgpool2d1_address),
      .avm_unnamed_avgpool2d1_writedata(avm_unnamed_avgpool2d1_writedata),
      .avm_unnamed_avgpool2d1_byteenable(avm_unnamed_avgpool2d1_byteenable),
      .avm_unnamed_avgpool2d1_waitrequest(avm_unnamed_avgpool2d1_waitrequest),
      .avm_unnamed_avgpool2d1_readdata(avm_unnamed_avgpool2d1_readdata),
      .avm_unnamed_avgpool2d1_readdatavalid(avm_unnamed_avgpool2d1_readdatavalid),
      .avm_unnamed_avgpool2d1_writeack(avm_unnamed_avgpool2d1_writeack)
   );

   assign lmem_invalid_single_bit = 'b0;
endmodule

/////////////////////////////////////////////////////////////////
// MODULE conv2d1x1_top_wrapper_0
/////////////////////////////////////////////////////////////////
module conv2d1x1_top_wrapper_0
(
   input logic start,
   input logic [351:0] kernel_arguments,
   input logic [31:0] work_dim,
   input logic [31:0] global_offset [2:0],
   output logic kernel_valid_out,
   output logic has_a_write_pending,
   output logic has_a_lsu_active,
   input logic [31:0] global_id [2:0],
   input logic [31:0] local_id [2:0],
   input logic [31:0] group_id [2:0],
   input logic [31:0] global_size [2:0],
   input logic [31:0] local_size [2:0],
   input logic [31:0] num_groups [2:0],
   input logic [31:0] workgroup_size,
   output logic kernel_stall_out,
   input logic kernel_valid_in,
   input logic clock,
   input logic resetn,
   input logic clock2x,
   // AVM avm_memcoalesce_filter_weight_load_0
   output logic avm_memcoalesce_filter_weight_load_0_enable,
   output logic avm_memcoalesce_filter_weight_load_0_read,
   output logic avm_memcoalesce_filter_weight_load_0_write,
   output logic [4:0] avm_memcoalesce_filter_weight_load_0_burstcount,
   output logic [30:0] avm_memcoalesce_filter_weight_load_0_address,
   output logic [255:0] avm_memcoalesce_filter_weight_load_0_writedata,
   output logic [31:0] avm_memcoalesce_filter_weight_load_0_byteenable,
   input logic avm_memcoalesce_filter_weight_load_0_waitrequest,
   input logic [255:0] avm_memcoalesce_filter_weight_load_0_readdata,
   input logic avm_memcoalesce_filter_weight_load_0_readdatavalid,
   input logic avm_memcoalesce_filter_weight_load_0_writeack,
   // AVM avm_unnamed_conv2d1x10
   output logic avm_unnamed_conv2d1x10_enable,
   output logic avm_unnamed_conv2d1x10_read,
   output logic avm_unnamed_conv2d1x10_write,
   output logic [4:0] avm_unnamed_conv2d1x10_burstcount,
   output logic [30:0] avm_unnamed_conv2d1x10_address,
   output logic [255:0] avm_unnamed_conv2d1x10_writedata,
   output logic [31:0] avm_unnamed_conv2d1x10_byteenable,
   input logic avm_unnamed_conv2d1x10_waitrequest,
   input logic [255:0] avm_unnamed_conv2d1x10_readdata,
   input logic avm_unnamed_conv2d1x10_readdatavalid,
   input logic avm_unnamed_conv2d1x10_writeack,
   // AVM avm_unnamed_conv2d1x13
   output logic avm_unnamed_conv2d1x13_enable,
   output logic avm_unnamed_conv2d1x13_read,
   output logic avm_unnamed_conv2d1x13_write,
   output logic [4:0] avm_unnamed_conv2d1x13_burstcount,
   output logic [30:0] avm_unnamed_conv2d1x13_address,
   output logic [255:0] avm_unnamed_conv2d1x13_writedata,
   output logic [31:0] avm_unnamed_conv2d1x13_byteenable,
   input logic avm_unnamed_conv2d1x13_waitrequest,
   input logic [255:0] avm_unnamed_conv2d1x13_readdata,
   input logic avm_unnamed_conv2d1x13_readdatavalid,
   input logic avm_unnamed_conv2d1x13_writeack,
   // AVM avm_unnamed_conv2d1x14
   output logic avm_unnamed_conv2d1x14_enable,
   output logic avm_unnamed_conv2d1x14_read,
   output logic avm_unnamed_conv2d1x14_write,
   output logic [4:0] avm_unnamed_conv2d1x14_burstcount,
   output logic [30:0] avm_unnamed_conv2d1x14_address,
   output logic [255:0] avm_unnamed_conv2d1x14_writedata,
   output logic [31:0] avm_unnamed_conv2d1x14_byteenable,
   input logic avm_unnamed_conv2d1x14_waitrequest,
   input logic [255:0] avm_unnamed_conv2d1x14_readdata,
   input logic avm_unnamed_conv2d1x14_readdatavalid,
   input logic avm_unnamed_conv2d1x14_writeack,
   // AVM avm_unnamed_conv2d1x15
   output logic avm_unnamed_conv2d1x15_enable,
   output logic avm_unnamed_conv2d1x15_read,
   output logic avm_unnamed_conv2d1x15_write,
   output logic [4:0] avm_unnamed_conv2d1x15_burstcount,
   output logic [30:0] avm_unnamed_conv2d1x15_address,
   output logic [255:0] avm_unnamed_conv2d1x15_writedata,
   output logic [31:0] avm_unnamed_conv2d1x15_byteenable,
   input logic avm_unnamed_conv2d1x15_waitrequest,
   input logic [255:0] avm_unnamed_conv2d1x15_readdata,
   input logic avm_unnamed_conv2d1x15_readdatavalid,
   input logic avm_unnamed_conv2d1x15_writeack,
   // AVM avm_unnamed_conv2d1x17
   output logic avm_unnamed_conv2d1x17_enable,
   output logic avm_unnamed_conv2d1x17_read,
   output logic avm_unnamed_conv2d1x17_write,
   output logic [4:0] avm_unnamed_conv2d1x17_burstcount,
   output logic [30:0] avm_unnamed_conv2d1x17_address,
   output logic [255:0] avm_unnamed_conv2d1x17_writedata,
   output logic [31:0] avm_unnamed_conv2d1x17_byteenable,
   input logic avm_unnamed_conv2d1x17_waitrequest,
   input logic [255:0] avm_unnamed_conv2d1x17_readdata,
   input logic avm_unnamed_conv2d1x17_readdatavalid,
   input logic avm_unnamed_conv2d1x17_writeack
);
   logic lmem_invalid_single_bit;

   // INST kernel of conv2d1x1_function_wrapper
   conv2d1x1_function_wrapper kernel
   (
      .local_router_hang(lmem_invalid_single_bit),
      .start(start),
      .kernel_arguments(kernel_arguments),
      .work_dim(work_dim),
      .global_offset_0(global_offset[0]),
      .global_offset_1(global_offset[1]),
      .global_offset_2(global_offset[2]),
      .kernel_valid_out(kernel_valid_out),
      .has_a_write_pending(has_a_write_pending),
      .has_a_lsu_active(has_a_lsu_active),
      .global_id_0(global_id[0]),
      .global_id_1(global_id[1]),
      .global_id_2(global_id[2]),
      .local_id_0(local_id[0]),
      .local_id_1(local_id[1]),
      .local_id_2(local_id[2]),
      .group_id_0(group_id[0]),
      .group_id_1(group_id[1]),
      .group_id_2(group_id[2]),
      .global_size_0(global_size[0]),
      .global_size_1(global_size[1]),
      .global_size_2(global_size[2]),
      .local_size_0(local_size[0]),
      .local_size_1(local_size[1]),
      .local_size_2(local_size[2]),
      .num_groups_0(num_groups[0]),
      .num_groups_1(num_groups[1]),
      .num_groups_2(num_groups[2]),
      .workgroup_size(workgroup_size),
      .kernel_stall_out(kernel_stall_out),
      .kernel_valid_in(kernel_valid_in),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_memcoalesce_filter_weight_load_0
      .avm_memcoalesce_filter_weight_load_0_enable(avm_memcoalesce_filter_weight_load_0_enable),
      .avm_memcoalesce_filter_weight_load_0_read(avm_memcoalesce_filter_weight_load_0_read),
      .avm_memcoalesce_filter_weight_load_0_write(avm_memcoalesce_filter_weight_load_0_write),
      .avm_memcoalesce_filter_weight_load_0_burstcount(avm_memcoalesce_filter_weight_load_0_burstcount),
      .avm_memcoalesce_filter_weight_load_0_address(avm_memcoalesce_filter_weight_load_0_address),
      .avm_memcoalesce_filter_weight_load_0_writedata(avm_memcoalesce_filter_weight_load_0_writedata),
      .avm_memcoalesce_filter_weight_load_0_byteenable(avm_memcoalesce_filter_weight_load_0_byteenable),
      .avm_memcoalesce_filter_weight_load_0_waitrequest(avm_memcoalesce_filter_weight_load_0_waitrequest),
      .avm_memcoalesce_filter_weight_load_0_readdata(avm_memcoalesce_filter_weight_load_0_readdata),
      .avm_memcoalesce_filter_weight_load_0_readdatavalid(avm_memcoalesce_filter_weight_load_0_readdatavalid),
      .avm_memcoalesce_filter_weight_load_0_writeack(avm_memcoalesce_filter_weight_load_0_writeack),
      // AVM avm_unnamed_conv2d1x10
      .avm_unnamed_conv2d1x10_enable(avm_unnamed_conv2d1x10_enable),
      .avm_unnamed_conv2d1x10_read(avm_unnamed_conv2d1x10_read),
      .avm_unnamed_conv2d1x10_write(avm_unnamed_conv2d1x10_write),
      .avm_unnamed_conv2d1x10_burstcount(avm_unnamed_conv2d1x10_burstcount),
      .avm_unnamed_conv2d1x10_address(avm_unnamed_conv2d1x10_address),
      .avm_unnamed_conv2d1x10_writedata(avm_unnamed_conv2d1x10_writedata),
      .avm_unnamed_conv2d1x10_byteenable(avm_unnamed_conv2d1x10_byteenable),
      .avm_unnamed_conv2d1x10_waitrequest(avm_unnamed_conv2d1x10_waitrequest),
      .avm_unnamed_conv2d1x10_readdata(avm_unnamed_conv2d1x10_readdata),
      .avm_unnamed_conv2d1x10_readdatavalid(avm_unnamed_conv2d1x10_readdatavalid),
      .avm_unnamed_conv2d1x10_writeack(avm_unnamed_conv2d1x10_writeack),
      // AVM avm_unnamed_conv2d1x13
      .avm_unnamed_conv2d1x13_enable(avm_unnamed_conv2d1x13_enable),
      .avm_unnamed_conv2d1x13_read(avm_unnamed_conv2d1x13_read),
      .avm_unnamed_conv2d1x13_write(avm_unnamed_conv2d1x13_write),
      .avm_unnamed_conv2d1x13_burstcount(avm_unnamed_conv2d1x13_burstcount),
      .avm_unnamed_conv2d1x13_address(avm_unnamed_conv2d1x13_address),
      .avm_unnamed_conv2d1x13_writedata(avm_unnamed_conv2d1x13_writedata),
      .avm_unnamed_conv2d1x13_byteenable(avm_unnamed_conv2d1x13_byteenable),
      .avm_unnamed_conv2d1x13_waitrequest(avm_unnamed_conv2d1x13_waitrequest),
      .avm_unnamed_conv2d1x13_readdata(avm_unnamed_conv2d1x13_readdata),
      .avm_unnamed_conv2d1x13_readdatavalid(avm_unnamed_conv2d1x13_readdatavalid),
      .avm_unnamed_conv2d1x13_writeack(avm_unnamed_conv2d1x13_writeack),
      // AVM avm_unnamed_conv2d1x14
      .avm_unnamed_conv2d1x14_enable(avm_unnamed_conv2d1x14_enable),
      .avm_unnamed_conv2d1x14_read(avm_unnamed_conv2d1x14_read),
      .avm_unnamed_conv2d1x14_write(avm_unnamed_conv2d1x14_write),
      .avm_unnamed_conv2d1x14_burstcount(avm_unnamed_conv2d1x14_burstcount),
      .avm_unnamed_conv2d1x14_address(avm_unnamed_conv2d1x14_address),
      .avm_unnamed_conv2d1x14_writedata(avm_unnamed_conv2d1x14_writedata),
      .avm_unnamed_conv2d1x14_byteenable(avm_unnamed_conv2d1x14_byteenable),
      .avm_unnamed_conv2d1x14_waitrequest(avm_unnamed_conv2d1x14_waitrequest),
      .avm_unnamed_conv2d1x14_readdata(avm_unnamed_conv2d1x14_readdata),
      .avm_unnamed_conv2d1x14_readdatavalid(avm_unnamed_conv2d1x14_readdatavalid),
      .avm_unnamed_conv2d1x14_writeack(avm_unnamed_conv2d1x14_writeack),
      // AVM avm_unnamed_conv2d1x15
      .avm_unnamed_conv2d1x15_enable(avm_unnamed_conv2d1x15_enable),
      .avm_unnamed_conv2d1x15_read(avm_unnamed_conv2d1x15_read),
      .avm_unnamed_conv2d1x15_write(avm_unnamed_conv2d1x15_write),
      .avm_unnamed_conv2d1x15_burstcount(avm_unnamed_conv2d1x15_burstcount),
      .avm_unnamed_conv2d1x15_address(avm_unnamed_conv2d1x15_address),
      .avm_unnamed_conv2d1x15_writedata(avm_unnamed_conv2d1x15_writedata),
      .avm_unnamed_conv2d1x15_byteenable(avm_unnamed_conv2d1x15_byteenable),
      .avm_unnamed_conv2d1x15_waitrequest(avm_unnamed_conv2d1x15_waitrequest),
      .avm_unnamed_conv2d1x15_readdata(avm_unnamed_conv2d1x15_readdata),
      .avm_unnamed_conv2d1x15_readdatavalid(avm_unnamed_conv2d1x15_readdatavalid),
      .avm_unnamed_conv2d1x15_writeack(avm_unnamed_conv2d1x15_writeack),
      // AVM avm_unnamed_conv2d1x17
      .avm_unnamed_conv2d1x17_enable(avm_unnamed_conv2d1x17_enable),
      .avm_unnamed_conv2d1x17_read(avm_unnamed_conv2d1x17_read),
      .avm_unnamed_conv2d1x17_write(avm_unnamed_conv2d1x17_write),
      .avm_unnamed_conv2d1x17_burstcount(avm_unnamed_conv2d1x17_burstcount),
      .avm_unnamed_conv2d1x17_address(avm_unnamed_conv2d1x17_address),
      .avm_unnamed_conv2d1x17_writedata(avm_unnamed_conv2d1x17_writedata),
      .avm_unnamed_conv2d1x17_byteenable(avm_unnamed_conv2d1x17_byteenable),
      .avm_unnamed_conv2d1x17_waitrequest(avm_unnamed_conv2d1x17_waitrequest),
      .avm_unnamed_conv2d1x17_readdata(avm_unnamed_conv2d1x17_readdata),
      .avm_unnamed_conv2d1x17_readdatavalid(avm_unnamed_conv2d1x17_readdatavalid),
      .avm_unnamed_conv2d1x17_writeack(avm_unnamed_conv2d1x17_writeack)
   );

   assign lmem_invalid_single_bit = 'b0;
endmodule

/////////////////////////////////////////////////////////////////
// MODULE conv2d3x3_top_wrapper_0
/////////////////////////////////////////////////////////////////
module conv2d3x3_top_wrapper_0
(
   input logic start,
   input logic [447:0] kernel_arguments,
   input logic [31:0] work_dim,
   input logic [31:0] global_offset [2:0],
   output logic kernel_valid_out,
   output logic has_a_write_pending,
   output logic has_a_lsu_active,
   input logic [31:0] global_id [2:0],
   input logic [31:0] local_id [2:0],
   input logic [31:0] group_id [2:0],
   input logic [31:0] global_size [2:0],
   input logic [31:0] local_size [2:0],
   input logic [31:0] num_groups [2:0],
   input logic [31:0] workgroup_size,
   output logic kernel_stall_out,
   input logic kernel_valid_in,
   input logic clock,
   input logic resetn,
   input logic clock2x,
   // AVM avm_memcoalesce_filter_weight_load_0
   output logic avm_memcoalesce_filter_weight_load_0_enable,
   output logic avm_memcoalesce_filter_weight_load_0_read,
   output logic avm_memcoalesce_filter_weight_load_0_write,
   output logic [4:0] avm_memcoalesce_filter_weight_load_0_burstcount,
   output logic [30:0] avm_memcoalesce_filter_weight_load_0_address,
   output logic [255:0] avm_memcoalesce_filter_weight_load_0_writedata,
   output logic [31:0] avm_memcoalesce_filter_weight_load_0_byteenable,
   input logic avm_memcoalesce_filter_weight_load_0_waitrequest,
   input logic [255:0] avm_memcoalesce_filter_weight_load_0_readdata,
   input logic avm_memcoalesce_filter_weight_load_0_readdatavalid,
   input logic avm_memcoalesce_filter_weight_load_0_writeack,
   // AVM avm_memcoalesce_input_im_load_0
   output logic avm_memcoalesce_input_im_load_0_enable,
   output logic avm_memcoalesce_input_im_load_0_read,
   output logic avm_memcoalesce_input_im_load_0_write,
   output logic [4:0] avm_memcoalesce_input_im_load_0_burstcount,
   output logic [30:0] avm_memcoalesce_input_im_load_0_address,
   output logic [255:0] avm_memcoalesce_input_im_load_0_writedata,
   output logic [31:0] avm_memcoalesce_input_im_load_0_byteenable,
   input logic avm_memcoalesce_input_im_load_0_waitrequest,
   input logic [255:0] avm_memcoalesce_input_im_load_0_readdata,
   input logic avm_memcoalesce_input_im_load_0_readdatavalid,
   input logic avm_memcoalesce_input_im_load_0_writeack,
   // AVM avm_unnamed_conv2d3x30
   output logic avm_unnamed_conv2d3x30_enable,
   output logic avm_unnamed_conv2d3x30_read,
   output logic avm_unnamed_conv2d3x30_write,
   output logic [4:0] avm_unnamed_conv2d3x30_burstcount,
   output logic [30:0] avm_unnamed_conv2d3x30_address,
   output logic [255:0] avm_unnamed_conv2d3x30_writedata,
   output logic [31:0] avm_unnamed_conv2d3x30_byteenable,
   input logic avm_unnamed_conv2d3x30_waitrequest,
   input logic [255:0] avm_unnamed_conv2d3x30_readdata,
   input logic avm_unnamed_conv2d3x30_readdatavalid,
   input logic avm_unnamed_conv2d3x30_writeack,
   // AVM avm_unnamed_conv2d3x35
   output logic avm_unnamed_conv2d3x35_enable,
   output logic avm_unnamed_conv2d3x35_read,
   output logic avm_unnamed_conv2d3x35_write,
   output logic [4:0] avm_unnamed_conv2d3x35_burstcount,
   output logic [30:0] avm_unnamed_conv2d3x35_address,
   output logic [255:0] avm_unnamed_conv2d3x35_writedata,
   output logic [31:0] avm_unnamed_conv2d3x35_byteenable,
   input logic avm_unnamed_conv2d3x35_waitrequest,
   input logic [255:0] avm_unnamed_conv2d3x35_readdata,
   input logic avm_unnamed_conv2d3x35_readdatavalid,
   input logic avm_unnamed_conv2d3x35_writeack
);
   logic lmem_invalid_single_bit;

   // INST kernel of conv2d3x3_function_wrapper
   conv2d3x3_function_wrapper kernel
   (
      .local_router_hang(lmem_invalid_single_bit),
      .start(start),
      .kernel_arguments(kernel_arguments),
      .work_dim(work_dim),
      .global_offset_0(global_offset[0]),
      .global_offset_1(global_offset[1]),
      .global_offset_2(global_offset[2]),
      .kernel_valid_out(kernel_valid_out),
      .has_a_write_pending(has_a_write_pending),
      .has_a_lsu_active(has_a_lsu_active),
      .global_id_0(global_id[0]),
      .global_id_1(global_id[1]),
      .global_id_2(global_id[2]),
      .local_id_0(local_id[0]),
      .local_id_1(local_id[1]),
      .local_id_2(local_id[2]),
      .group_id_0(group_id[0]),
      .group_id_1(group_id[1]),
      .group_id_2(group_id[2]),
      .global_size_0(global_size[0]),
      .global_size_1(global_size[1]),
      .global_size_2(global_size[2]),
      .local_size_0(local_size[0]),
      .local_size_1(local_size[1]),
      .local_size_2(local_size[2]),
      .num_groups_0(num_groups[0]),
      .num_groups_1(num_groups[1]),
      .num_groups_2(num_groups[2]),
      .workgroup_size(workgroup_size),
      .kernel_stall_out(kernel_stall_out),
      .kernel_valid_in(kernel_valid_in),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_memcoalesce_filter_weight_load_0
      .avm_memcoalesce_filter_weight_load_0_enable(avm_memcoalesce_filter_weight_load_0_enable),
      .avm_memcoalesce_filter_weight_load_0_read(avm_memcoalesce_filter_weight_load_0_read),
      .avm_memcoalesce_filter_weight_load_0_write(avm_memcoalesce_filter_weight_load_0_write),
      .avm_memcoalesce_filter_weight_load_0_burstcount(avm_memcoalesce_filter_weight_load_0_burstcount),
      .avm_memcoalesce_filter_weight_load_0_address(avm_memcoalesce_filter_weight_load_0_address),
      .avm_memcoalesce_filter_weight_load_0_writedata(avm_memcoalesce_filter_weight_load_0_writedata),
      .avm_memcoalesce_filter_weight_load_0_byteenable(avm_memcoalesce_filter_weight_load_0_byteenable),
      .avm_memcoalesce_filter_weight_load_0_waitrequest(avm_memcoalesce_filter_weight_load_0_waitrequest),
      .avm_memcoalesce_filter_weight_load_0_readdata(avm_memcoalesce_filter_weight_load_0_readdata),
      .avm_memcoalesce_filter_weight_load_0_readdatavalid(avm_memcoalesce_filter_weight_load_0_readdatavalid),
      .avm_memcoalesce_filter_weight_load_0_writeack(avm_memcoalesce_filter_weight_load_0_writeack),
      // AVM avm_memcoalesce_input_im_load_0
      .avm_memcoalesce_input_im_load_0_enable(avm_memcoalesce_input_im_load_0_enable),
      .avm_memcoalesce_input_im_load_0_read(avm_memcoalesce_input_im_load_0_read),
      .avm_memcoalesce_input_im_load_0_write(avm_memcoalesce_input_im_load_0_write),
      .avm_memcoalesce_input_im_load_0_burstcount(avm_memcoalesce_input_im_load_0_burstcount),
      .avm_memcoalesce_input_im_load_0_address(avm_memcoalesce_input_im_load_0_address),
      .avm_memcoalesce_input_im_load_0_writedata(avm_memcoalesce_input_im_load_0_writedata),
      .avm_memcoalesce_input_im_load_0_byteenable(avm_memcoalesce_input_im_load_0_byteenable),
      .avm_memcoalesce_input_im_load_0_waitrequest(avm_memcoalesce_input_im_load_0_waitrequest),
      .avm_memcoalesce_input_im_load_0_readdata(avm_memcoalesce_input_im_load_0_readdata),
      .avm_memcoalesce_input_im_load_0_readdatavalid(avm_memcoalesce_input_im_load_0_readdatavalid),
      .avm_memcoalesce_input_im_load_0_writeack(avm_memcoalesce_input_im_load_0_writeack),
      // AVM avm_unnamed_conv2d3x30
      .avm_unnamed_conv2d3x30_enable(avm_unnamed_conv2d3x30_enable),
      .avm_unnamed_conv2d3x30_read(avm_unnamed_conv2d3x30_read),
      .avm_unnamed_conv2d3x30_write(avm_unnamed_conv2d3x30_write),
      .avm_unnamed_conv2d3x30_burstcount(avm_unnamed_conv2d3x30_burstcount),
      .avm_unnamed_conv2d3x30_address(avm_unnamed_conv2d3x30_address),
      .avm_unnamed_conv2d3x30_writedata(avm_unnamed_conv2d3x30_writedata),
      .avm_unnamed_conv2d3x30_byteenable(avm_unnamed_conv2d3x30_byteenable),
      .avm_unnamed_conv2d3x30_waitrequest(avm_unnamed_conv2d3x30_waitrequest),
      .avm_unnamed_conv2d3x30_readdata(avm_unnamed_conv2d3x30_readdata),
      .avm_unnamed_conv2d3x30_readdatavalid(avm_unnamed_conv2d3x30_readdatavalid),
      .avm_unnamed_conv2d3x30_writeack(avm_unnamed_conv2d3x30_writeack),
      // AVM avm_unnamed_conv2d3x35
      .avm_unnamed_conv2d3x35_enable(avm_unnamed_conv2d3x35_enable),
      .avm_unnamed_conv2d3x35_read(avm_unnamed_conv2d3x35_read),
      .avm_unnamed_conv2d3x35_write(avm_unnamed_conv2d3x35_write),
      .avm_unnamed_conv2d3x35_burstcount(avm_unnamed_conv2d3x35_burstcount),
      .avm_unnamed_conv2d3x35_address(avm_unnamed_conv2d3x35_address),
      .avm_unnamed_conv2d3x35_writedata(avm_unnamed_conv2d3x35_writedata),
      .avm_unnamed_conv2d3x35_byteenable(avm_unnamed_conv2d3x35_byteenable),
      .avm_unnamed_conv2d3x35_waitrequest(avm_unnamed_conv2d3x35_waitrequest),
      .avm_unnamed_conv2d3x35_readdata(avm_unnamed_conv2d3x35_readdata),
      .avm_unnamed_conv2d3x35_readdatavalid(avm_unnamed_conv2d3x35_readdatavalid),
      .avm_unnamed_conv2d3x35_writeack(avm_unnamed_conv2d3x35_writeack)
   );

   assign lmem_invalid_single_bit = 'b0;
endmodule

/////////////////////////////////////////////////////////////////
// MODULE fc_top_wrapper_0
/////////////////////////////////////////////////////////////////
module fc_top_wrapper_0
(
   input logic start,
   input logic [319:0] kernel_arguments,
   input logic [31:0] work_dim,
   input logic [31:0] global_offset [2:0],
   output logic kernel_valid_out,
   output logic has_a_write_pending,
   output logic has_a_lsu_active,
   input logic [31:0] global_id [2:0],
   input logic [31:0] local_id [2:0],
   input logic [31:0] group_id [2:0],
   input logic [31:0] global_size [2:0],
   input logic [31:0] local_size [2:0],
   input logic [31:0] num_groups [2:0],
   input logic [31:0] workgroup_size,
   output logic kernel_stall_out,
   input logic kernel_valid_in,
   input logic clock,
   input logic resetn,
   input logic clock2x,
   // AVM avm_unnamed_fc0
   output logic avm_unnamed_fc0_enable,
   output logic avm_unnamed_fc0_read,
   output logic avm_unnamed_fc0_write,
   output logic [4:0] avm_unnamed_fc0_burstcount,
   output logic [30:0] avm_unnamed_fc0_address,
   output logic [255:0] avm_unnamed_fc0_writedata,
   output logic [31:0] avm_unnamed_fc0_byteenable,
   input logic avm_unnamed_fc0_waitrequest,
   input logic [255:0] avm_unnamed_fc0_readdata,
   input logic avm_unnamed_fc0_readdatavalid,
   input logic avm_unnamed_fc0_writeack,
   // AVM avm_unnamed_fc2
   output logic avm_unnamed_fc2_enable,
   output logic avm_unnamed_fc2_read,
   output logic avm_unnamed_fc2_write,
   output logic [4:0] avm_unnamed_fc2_burstcount,
   output logic [30:0] avm_unnamed_fc2_address,
   output logic [255:0] avm_unnamed_fc2_writedata,
   output logic [31:0] avm_unnamed_fc2_byteenable,
   input logic avm_unnamed_fc2_waitrequest,
   input logic [255:0] avm_unnamed_fc2_readdata,
   input logic avm_unnamed_fc2_readdatavalid,
   input logic avm_unnamed_fc2_writeack,
   // AVM avm_unnamed_fc3
   output logic avm_unnamed_fc3_enable,
   output logic avm_unnamed_fc3_read,
   output logic avm_unnamed_fc3_write,
   output logic [4:0] avm_unnamed_fc3_burstcount,
   output logic [30:0] avm_unnamed_fc3_address,
   output logic [255:0] avm_unnamed_fc3_writedata,
   output logic [31:0] avm_unnamed_fc3_byteenable,
   input logic avm_unnamed_fc3_waitrequest,
   input logic [255:0] avm_unnamed_fc3_readdata,
   input logic avm_unnamed_fc3_readdatavalid,
   input logic avm_unnamed_fc3_writeack,
   // AVM avm_unnamed_fc5
   output logic avm_unnamed_fc5_enable,
   output logic avm_unnamed_fc5_read,
   output logic avm_unnamed_fc5_write,
   output logic [4:0] avm_unnamed_fc5_burstcount,
   output logic [30:0] avm_unnamed_fc5_address,
   output logic [255:0] avm_unnamed_fc5_writedata,
   output logic [31:0] avm_unnamed_fc5_byteenable,
   input logic avm_unnamed_fc5_waitrequest,
   input logic [255:0] avm_unnamed_fc5_readdata,
   input logic avm_unnamed_fc5_readdatavalid,
   input logic avm_unnamed_fc5_writeack
);
   logic lmem_invalid_single_bit;

   // INST kernel of fc_function_wrapper
   fc_function_wrapper kernel
   (
      .local_router_hang(lmem_invalid_single_bit),
      .start(start),
      .kernel_arguments(kernel_arguments),
      .work_dim(work_dim),
      .global_offset_0(global_offset[0]),
      .global_offset_1(global_offset[1]),
      .global_offset_2(global_offset[2]),
      .kernel_valid_out(kernel_valid_out),
      .has_a_write_pending(has_a_write_pending),
      .has_a_lsu_active(has_a_lsu_active),
      .global_id_0(global_id[0]),
      .global_id_1(global_id[1]),
      .global_id_2(global_id[2]),
      .local_id_0(local_id[0]),
      .local_id_1(local_id[1]),
      .local_id_2(local_id[2]),
      .group_id_0(group_id[0]),
      .group_id_1(group_id[1]),
      .group_id_2(group_id[2]),
      .global_size_0(global_size[0]),
      .global_size_1(global_size[1]),
      .global_size_2(global_size[2]),
      .local_size_0(local_size[0]),
      .local_size_1(local_size[1]),
      .local_size_2(local_size[2]),
      .num_groups_0(num_groups[0]),
      .num_groups_1(num_groups[1]),
      .num_groups_2(num_groups[2]),
      .workgroup_size(workgroup_size),
      .kernel_stall_out(kernel_stall_out),
      .kernel_valid_in(kernel_valid_in),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_unnamed_fc0
      .avm_unnamed_fc0_enable(avm_unnamed_fc0_enable),
      .avm_unnamed_fc0_read(avm_unnamed_fc0_read),
      .avm_unnamed_fc0_write(avm_unnamed_fc0_write),
      .avm_unnamed_fc0_burstcount(avm_unnamed_fc0_burstcount),
      .avm_unnamed_fc0_address(avm_unnamed_fc0_address),
      .avm_unnamed_fc0_writedata(avm_unnamed_fc0_writedata),
      .avm_unnamed_fc0_byteenable(avm_unnamed_fc0_byteenable),
      .avm_unnamed_fc0_waitrequest(avm_unnamed_fc0_waitrequest),
      .avm_unnamed_fc0_readdata(avm_unnamed_fc0_readdata),
      .avm_unnamed_fc0_readdatavalid(avm_unnamed_fc0_readdatavalid),
      .avm_unnamed_fc0_writeack(avm_unnamed_fc0_writeack),
      // AVM avm_unnamed_fc2
      .avm_unnamed_fc2_enable(avm_unnamed_fc2_enable),
      .avm_unnamed_fc2_read(avm_unnamed_fc2_read),
      .avm_unnamed_fc2_write(avm_unnamed_fc2_write),
      .avm_unnamed_fc2_burstcount(avm_unnamed_fc2_burstcount),
      .avm_unnamed_fc2_address(avm_unnamed_fc2_address),
      .avm_unnamed_fc2_writedata(avm_unnamed_fc2_writedata),
      .avm_unnamed_fc2_byteenable(avm_unnamed_fc2_byteenable),
      .avm_unnamed_fc2_waitrequest(avm_unnamed_fc2_waitrequest),
      .avm_unnamed_fc2_readdata(avm_unnamed_fc2_readdata),
      .avm_unnamed_fc2_readdatavalid(avm_unnamed_fc2_readdatavalid),
      .avm_unnamed_fc2_writeack(avm_unnamed_fc2_writeack),
      // AVM avm_unnamed_fc3
      .avm_unnamed_fc3_enable(avm_unnamed_fc3_enable),
      .avm_unnamed_fc3_read(avm_unnamed_fc3_read),
      .avm_unnamed_fc3_write(avm_unnamed_fc3_write),
      .avm_unnamed_fc3_burstcount(avm_unnamed_fc3_burstcount),
      .avm_unnamed_fc3_address(avm_unnamed_fc3_address),
      .avm_unnamed_fc3_writedata(avm_unnamed_fc3_writedata),
      .avm_unnamed_fc3_byteenable(avm_unnamed_fc3_byteenable),
      .avm_unnamed_fc3_waitrequest(avm_unnamed_fc3_waitrequest),
      .avm_unnamed_fc3_readdata(avm_unnamed_fc3_readdata),
      .avm_unnamed_fc3_readdatavalid(avm_unnamed_fc3_readdatavalid),
      .avm_unnamed_fc3_writeack(avm_unnamed_fc3_writeack),
      // AVM avm_unnamed_fc5
      .avm_unnamed_fc5_enable(avm_unnamed_fc5_enable),
      .avm_unnamed_fc5_read(avm_unnamed_fc5_read),
      .avm_unnamed_fc5_write(avm_unnamed_fc5_write),
      .avm_unnamed_fc5_burstcount(avm_unnamed_fc5_burstcount),
      .avm_unnamed_fc5_address(avm_unnamed_fc5_address),
      .avm_unnamed_fc5_writedata(avm_unnamed_fc5_writedata),
      .avm_unnamed_fc5_byteenable(avm_unnamed_fc5_byteenable),
      .avm_unnamed_fc5_waitrequest(avm_unnamed_fc5_waitrequest),
      .avm_unnamed_fc5_readdata(avm_unnamed_fc5_readdata),
      .avm_unnamed_fc5_readdatavalid(avm_unnamed_fc5_readdatavalid),
      .avm_unnamed_fc5_writeack(avm_unnamed_fc5_writeack)
   );

   assign lmem_invalid_single_bit = 'b0;
endmodule

/////////////////////////////////////////////////////////////////
// MODULE maxpool2d_top_wrapper_0
/////////////////////////////////////////////////////////////////
module maxpool2d_top_wrapper_0
(
   input logic start,
   input logic [191:0] kernel_arguments,
   input logic [31:0] work_dim,
   input logic [31:0] global_offset [2:0],
   output logic kernel_valid_out,
   output logic has_a_write_pending,
   output logic has_a_lsu_active,
   input logic [31:0] global_id [2:0],
   input logic [31:0] local_id [2:0],
   input logic [31:0] group_id [2:0],
   input logic [31:0] global_size [2:0],
   input logic [31:0] local_size [2:0],
   input logic [31:0] num_groups [2:0],
   input logic [31:0] workgroup_size,
   output logic kernel_stall_out,
   input logic kernel_valid_in,
   input logic clock,
   input logic resetn,
   input logic clock2x,
   // AVM avm_memcoalesce_input_im_load_0
   output logic avm_memcoalesce_input_im_load_0_enable,
   output logic avm_memcoalesce_input_im_load_0_read,
   output logic avm_memcoalesce_input_im_load_0_write,
   output logic [4:0] avm_memcoalesce_input_im_load_0_burstcount,
   output logic [30:0] avm_memcoalesce_input_im_load_0_address,
   output logic [255:0] avm_memcoalesce_input_im_load_0_writedata,
   output logic [31:0] avm_memcoalesce_input_im_load_0_byteenable,
   input logic avm_memcoalesce_input_im_load_0_waitrequest,
   input logic [255:0] avm_memcoalesce_input_im_load_0_readdata,
   input logic avm_memcoalesce_input_im_load_0_readdatavalid,
   input logic avm_memcoalesce_input_im_load_0_writeack,
   // AVM avm_unnamed_maxpool2d1
   output logic avm_unnamed_maxpool2d1_enable,
   output logic avm_unnamed_maxpool2d1_read,
   output logic avm_unnamed_maxpool2d1_write,
   output logic [4:0] avm_unnamed_maxpool2d1_burstcount,
   output logic [30:0] avm_unnamed_maxpool2d1_address,
   output logic [255:0] avm_unnamed_maxpool2d1_writedata,
   output logic [31:0] avm_unnamed_maxpool2d1_byteenable,
   input logic avm_unnamed_maxpool2d1_waitrequest,
   input logic [255:0] avm_unnamed_maxpool2d1_readdata,
   input logic avm_unnamed_maxpool2d1_readdatavalid,
   input logic avm_unnamed_maxpool2d1_writeack
);
   logic lmem_invalid_single_bit;

   // INST kernel of maxpool2d_function_wrapper
   maxpool2d_function_wrapper kernel
   (
      .local_router_hang(lmem_invalid_single_bit),
      .start(start),
      .kernel_arguments(kernel_arguments),
      .work_dim(work_dim),
      .global_offset_0(global_offset[0]),
      .global_offset_1(global_offset[1]),
      .global_offset_2(global_offset[2]),
      .kernel_valid_out(kernel_valid_out),
      .has_a_write_pending(has_a_write_pending),
      .has_a_lsu_active(has_a_lsu_active),
      .global_id_0(global_id[0]),
      .global_id_1(global_id[1]),
      .global_id_2(global_id[2]),
      .local_id_0(local_id[0]),
      .local_id_1(local_id[1]),
      .local_id_2(local_id[2]),
      .group_id_0(group_id[0]),
      .group_id_1(group_id[1]),
      .group_id_2(group_id[2]),
      .global_size_0(global_size[0]),
      .global_size_1(global_size[1]),
      .global_size_2(global_size[2]),
      .local_size_0(local_size[0]),
      .local_size_1(local_size[1]),
      .local_size_2(local_size[2]),
      .num_groups_0(num_groups[0]),
      .num_groups_1(num_groups[1]),
      .num_groups_2(num_groups[2]),
      .workgroup_size(workgroup_size),
      .kernel_stall_out(kernel_stall_out),
      .kernel_valid_in(kernel_valid_in),
      .clock(clock),
      .resetn(resetn),
      .clock2x(clock2x),
      // AVM avm_memcoalesce_input_im_load_0
      .avm_memcoalesce_input_im_load_0_enable(avm_memcoalesce_input_im_load_0_enable),
      .avm_memcoalesce_input_im_load_0_read(avm_memcoalesce_input_im_load_0_read),
      .avm_memcoalesce_input_im_load_0_write(avm_memcoalesce_input_im_load_0_write),
      .avm_memcoalesce_input_im_load_0_burstcount(avm_memcoalesce_input_im_load_0_burstcount),
      .avm_memcoalesce_input_im_load_0_address(avm_memcoalesce_input_im_load_0_address),
      .avm_memcoalesce_input_im_load_0_writedata(avm_memcoalesce_input_im_load_0_writedata),
      .avm_memcoalesce_input_im_load_0_byteenable(avm_memcoalesce_input_im_load_0_byteenable),
      .avm_memcoalesce_input_im_load_0_waitrequest(avm_memcoalesce_input_im_load_0_waitrequest),
      .avm_memcoalesce_input_im_load_0_readdata(avm_memcoalesce_input_im_load_0_readdata),
      .avm_memcoalesce_input_im_load_0_readdatavalid(avm_memcoalesce_input_im_load_0_readdatavalid),
      .avm_memcoalesce_input_im_load_0_writeack(avm_memcoalesce_input_im_load_0_writeack),
      // AVM avm_unnamed_maxpool2d1
      .avm_unnamed_maxpool2d1_enable(avm_unnamed_maxpool2d1_enable),
      .avm_unnamed_maxpool2d1_read(avm_unnamed_maxpool2d1_read),
      .avm_unnamed_maxpool2d1_write(avm_unnamed_maxpool2d1_write),
      .avm_unnamed_maxpool2d1_burstcount(avm_unnamed_maxpool2d1_burstcount),
      .avm_unnamed_maxpool2d1_address(avm_unnamed_maxpool2d1_address),
      .avm_unnamed_maxpool2d1_writedata(avm_unnamed_maxpool2d1_writedata),
      .avm_unnamed_maxpool2d1_byteenable(avm_unnamed_maxpool2d1_byteenable),
      .avm_unnamed_maxpool2d1_waitrequest(avm_unnamed_maxpool2d1_waitrequest),
      .avm_unnamed_maxpool2d1_readdata(avm_unnamed_maxpool2d1_readdata),
      .avm_unnamed_maxpool2d1_readdatavalid(avm_unnamed_maxpool2d1_readdatavalid),
      .avm_unnamed_maxpool2d1_writeack(avm_unnamed_maxpool2d1_writeack)
   );

   assign lmem_invalid_single_bit = 'b0;
endmodule

